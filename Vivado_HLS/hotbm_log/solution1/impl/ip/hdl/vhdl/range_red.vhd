-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity range_red is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A : IN STD_LOGIC_VECTOR (4 downto 0);
    Y0 : IN STD_LOGIC_VECTOR (53 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of range_red is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv59_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv62_3000000000000000 : STD_LOGIC_VECTOR (61 downto 0) := "11000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_F000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1111000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv25_800000 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_7000000000000000 : STD_LOGIC_VECTOR (62 downto 0) := "111000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv39_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv20_80000 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv23_400000 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv55_0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv55_20000000000000 : STD_LOGIC_VECTOR (54 downto 0) := "0100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal invtable0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal invtable0_ce0 : STD_LOGIC;
    signal invtable0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal logtable0_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal logtable0_1_ce0 : STD_LOGIC;
    signal logtable0_1_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal logtable1_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable1_1_ce0 : STD_LOGIC;
    signal logtable1_1_q0 : STD_LOGIC_VECTOR (18 downto 0);
    signal logtable2_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable2_1_ce0 : STD_LOGIC;
    signal logtable2_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal logtable3_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable3_1_ce0 : STD_LOGIC;
    signal logtable3_1_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal logtable4_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable4_1_ce0 : STD_LOGIC;
    signal logtable4_1_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal logtable5_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable5_1_ce0 : STD_LOGIC;
    signal logtable5_1_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal logtable0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal logtable0_0_ce0 : STD_LOGIC;
    signal logtable0_0_q0 : STD_LOGIC_VECTOR (59 downto 0);
    signal logtable1_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable1_0_ce0 : STD_LOGIC;
    signal logtable1_0_q0 : STD_LOGIC_VECTOR (59 downto 0);
    signal logtable2_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable2_0_ce0 : STD_LOGIC;
    signal logtable2_0_q0 : STD_LOGIC_VECTOR (59 downto 0);
    signal logtable3_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable3_0_ce0 : STD_LOGIC;
    signal logtable3_0_q0 : STD_LOGIC_VECTOR (59 downto 0);
    signal logtable4_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable4_0_ce0 : STD_LOGIC;
    signal logtable4_0_q0 : STD_LOGIC_VECTOR (55 downto 0);
    signal logtable5_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable5_0_ce0 : STD_LOGIC;
    signal logtable5_0_q0 : STD_LOGIC_VECTOR (49 downto 0);
    signal logtable6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable6_ce0 : STD_LOGIC;
    signal logtable6_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal logtable7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable7_ce0 : STD_LOGIC;
    signal logtable7_q0 : STD_LOGIC_VECTOR (60 downto 0);
    signal logtable8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logtable8_ce0 : STD_LOGIC;
    signal logtable8_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_fu_524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_2475 : STD_LOGIC_VECTOR (63 downto 0);
    signal InvA0_reg_2486 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal Z1_d_fu_542_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Z1_d_reg_2491 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal A1_reg_2497 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_reg_2504 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_564_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_12_reg_2509 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_1_fu_574_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_1_reg_2514 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal Z2_d_fu_661_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal Z2_d_reg_2519 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal A2_fu_667_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal A2_reg_2524 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_721_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_14_reg_2529 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_20_fu_749_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_reg_2534 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_reg_2539 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_16_fu_767_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_16_reg_2545 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_17_reg_2550 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_2555 : STD_LOGIC_VECTOR (3 downto 0);
    signal Z3_1_2_fu_888_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z3_1_2_reg_2560 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal A3_reg_2565 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_43_cast_reg_2572 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_27_fu_912_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_27_reg_2577 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_48_cast_reg_2582 : STD_LOGIC_VECTOR (2 downto 0);
    signal phitmp1_cast_reg_2587 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_34_fu_936_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_34_reg_2592 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_67_cast_reg_2597 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_46_fu_950_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_46_reg_2602 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_30_reg_2607 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_59_cast_reg_2612 : STD_LOGIC_VECTOR (55 downto 0);
    signal epsZ3_0_fu_1009_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal epsZ3_0_reg_2637 : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_35_fu_1042_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_35_reg_2644 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_37_fu_1049_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_37_reg_2649 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_39_fu_1052_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_39_reg_2654 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_72_cast_reg_2659 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_49_fu_1091_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_49_reg_2664 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp14_fu_1113_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp14_reg_2669 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp19_fu_1119_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp19_reg_2674 : STD_LOGIC_VECTOR (16 downto 0);
    signal Z4_0_2_fu_1181_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal Z4_0_2_reg_2679 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal Z4_1_fu_1249_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal Z4_1_reg_2684 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_54_fu_1255_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_54_reg_2689 : STD_LOGIC_VECTOR (5 downto 0);
    signal A4_reg_2694 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_cast_reg_2701 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_55_fu_1279_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_55_reg_2706 : STD_LOGIC_VECTOR (9 downto 0);
    signal phitmp4_cast_reg_2711 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_98_cast_reg_2716 : STD_LOGIC_VECTOR (55 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_61_reg_2721 : STD_LOGIC_VECTOR (0 downto 0);
    signal Z5_0_2_fu_1447_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal Z5_0_2_reg_2726 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_71_fu_1501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_2731 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_1507_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_72_reg_2736 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_fu_1525_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_reg_2741 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_120_cast_reg_2746 : STD_LOGIC_VECTOR (43 downto 0);
    signal phitmp7_cast_reg_2751 : STD_LOGIC_VECTOR (38 downto 0);
    signal Z5_1_2_fu_1554_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z5_1_2_reg_2756 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_75_fu_1560_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_75_reg_2761 : STD_LOGIC_VECTOR (2 downto 0);
    signal A5_fu_1564_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal A5_reg_2766 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_reg_2772 : STD_LOGIC_VECTOR (50 downto 0);
    signal B6_fu_1687_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal B6_reg_2777 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal A6_fu_1775_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal A6_reg_2782 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_reg_2791 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_146_cast_reg_2796 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_91_fu_1825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_reg_2801 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_94_fu_1844_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_94_reg_2807 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_116_fu_1850_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_116_reg_2813 : STD_LOGIC_VECTOR (56 downto 0);
    signal B7_fu_1911_p2 : STD_LOGIC_VECTOR (56 downto 0);
    signal B7_reg_2818 : STD_LOGIC_VECTOR (56 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal A7_fu_1921_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal A7_reg_2823 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_159_cast_reg_2829 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_117_reg_2834 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_reg_2839 : STD_LOGIC_VECTOR (38 downto 0);
    signal B8_fu_2101_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal B8_reg_2844 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal A8_fu_2113_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal A8_reg_2849 : STD_LOGIC_VECTOR (3 downto 0);
    signal ZM8_reg_2855 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_110_reg_2860 : STD_LOGIC_VECTOR (28 downto 0);
    signal Z9_fu_2221_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal Z9_reg_2920 : STD_LOGIC_VECTOR (55 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal logtable4_1_load_reg_2925 : STD_LOGIC_VECTOR (9 downto 0);
    signal logtable5_1_load_reg_2930 : STD_LOGIC_VECTOR (6 downto 0);
    signal SUM_LS_1_fu_2336_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal SUM_LS_1_reg_2935 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_127_reg_2940 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_reg_2945 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_118_reg_2950 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp18_fu_2370_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp18_reg_2955 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_28_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_1983_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_1988_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_fu_1993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_90_fu_1998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_99_fu_2005_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_108_fu_2133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal P0_fu_536_p0 : STD_LOGIC_VECTOR (53 downto 0);
    signal P0_fu_536_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal P0_fu_536_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_1_fu_574_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_574_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_5_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_585_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal epsZ1_fu_592_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_s_fu_604_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal epsZ1_cast_fu_600_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal epsZ1_1_fu_612_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal B1_fu_623_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_3_fu_634_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_7_cast_fu_630_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_10_cast_fu_641_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_7_fu_645_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal epsZ1_1_cast_fu_619_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_11_cast_fu_651_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_8_fu_655_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_10_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal epsZ2_0_fu_683_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_15_fu_699_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_13_fu_695_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_11_fu_703_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_17_cast_fu_709_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal epsZ2_0_cast_fu_691_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_18_cast_fu_717_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal B2_cast_fu_735_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_cast_cast_fu_727_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_cast_fu_745_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal P2_0_fu_761_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P2_0_fu_761_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal P2_0_fu_761_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_cast_fu_789_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_21_cast_fu_800_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_20_cast_fu_796_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_19_fu_812_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_28_cast_fu_823_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_cast_fu_809_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_21_fu_826_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_27_cast_fu_819_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal Z3_0_fu_803_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_23_fu_838_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_mask_fu_848_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_25_fu_862_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_cast_cast_fu_870_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_fu_832_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal Z3_1_1_v_fu_874_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal Z3_1_fu_882_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_fu_954_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal P3_0_fu_969_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P3_0_fu_969_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal P3_0_fu_969_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1016_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_55_cast_fu_1031_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal epsZ3_1_fu_1023_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2465_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_56_cast_fu_1038_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_60_cast_fu_1046_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_47_fu_1058_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_48_fu_1068_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_70_cast_fu_1064_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_71_cast_fu_1078_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal L2_0_cast_fu_1105_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal L3_0_cast_fu_1109_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal L3_1_cast_fu_1101_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal L2_1_cast_fu_1097_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_fu_1135_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_36_fu_1128_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_cast_fu_1146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1149_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_cast_fu_1142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1155_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal epsZ3_0_cast_fu_1125_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_1171_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_44_fu_1168_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_43_fu_1164_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_42_fu_1161_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_74_cast_fu_1196_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_73_cast_fu_1193_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal Z4_0_fu_1175_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_fu_1205_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mask3_fu_1215_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal Z4_0_cast_fu_1187_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_53_fu_1229_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_cast_cast_fu_1237_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_50_fu_1199_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal Z4_1_2_v_fu_1241_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ZM4_fu_1293_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal P4_0_fu_1306_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P4_0_fu_1306_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal P4_0_fu_1306_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_57_fu_1339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal epsZ4_0_fu_1344_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal Z4_1_2_cast3_fu_1330_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_58_fu_1355_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal epsZ4_1_fu_1361_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_59_fu_1369_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_60_fu_1373_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_62_fu_1388_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal Z4_0_2_cast_fu_1333_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_99_cast_fu_1385_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_63_fu_1399_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_97_cast_fu_1381_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_102_cast_fu_1405_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_64_fu_1409_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_101_cast_fu_1395_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_65_fu_1415_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal epsZ4_0_cast_fu_1351_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_104_cast_fu_1421_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_69_fu_1437_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_68_fu_1433_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_67_fu_1429_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_66_fu_1425_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_105_cast_fu_1459_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal B4_1_cast_fu_1336_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_106_cast_fu_1469_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z5_1_fu_1473_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z5_0_fu_1441_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_70_fu_1483_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_mask6_fu_1493_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal Z5_1_cast_fu_1479_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z5_0_cast_fu_1453_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_73_fu_1513_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_cast_fu_1521_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_113_cast_cast_fu_1551_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_81_fu_1574_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ZM5_fu_1578_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal P5_fu_1593_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P5_fu_1593_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal P5_fu_1593_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_77_fu_1618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Z5_1_2_cast2_fu_1609_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_78_fu_1630_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal Z5_0_2_cast_fu_1612_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_128_cast_fu_1644_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_80_fu_1647_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal epsZ5_1_fu_1636_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_83_fu_1657_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal epsZ5_0_fu_1623_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp1_fu_1661_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_129_cast_fu_1653_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp1_cast_fu_1669_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_87_fu_1677_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_82_fu_1673_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_131_cast_fu_1699_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal B5_1_cast_fu_1615_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_132_cast_fu_1709_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal Z6_1_fu_1713_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal Z6_0_fu_1681_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_84_fu_1723_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_mask9_fu_1733_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_89_fu_1719_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal Z6_0_cast_fu_1693_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_95_fu_1753_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_1765_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_97_fu_1761_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_1747_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1769_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ZM6_fu_1806_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal P6_fu_1819_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P6_fu_1819_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal P6_fu_1819_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_93_fu_1830_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal B6_cast_fu_1803_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_151_cast_fu_1840_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_92_fu_1860_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal epsZ6_1_fu_1867_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal epsZ6_0_fu_1854_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp2_fu_1881_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_115_fu_1877_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_152_cast_fu_1874_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp2_cast_fu_1889_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_98_fu_1897_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_96_fu_1893_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal Z7_0_fu_1905_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal Z7_0_cast_cast_fu_1916_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal ZM7_fu_1931_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal P7_fu_1949_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P7_fu_1949_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal P7_fu_1949_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_100_fu_2009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp9_fu_2021_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_101_fu_2028_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal B7_cast_fu_2002_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_165_cast_fu_2048_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_105_fu_2051_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_120_fu_2036_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_fu_2044_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal epsZ7_0_fu_2014_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp3_fu_2061_p5 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_166_cast_fu_2057_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp3_cast_fu_2073_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_107_fu_2085_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_122_fu_2081_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_106_fu_2077_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal Z8_0_fu_2095_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal Z8_0_cast25_cast_fu_2107_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal P8_fu_2157_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P8_fu_2157_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_109_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal epsZ8_0_fu_2168_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal epsZ8_0_cast1_fu_2175_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal P8_fu_2157_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_111_fu_2191_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal B8_cast_fu_2148_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_173_cast_cast_fu_2183_p3 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_112_fu_2205_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_175_cast_fu_2211_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_174_cast_fu_2201_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal epsZ8_0_cast_fu_2179_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_113_fu_2215_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_124_fu_2251_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_123_fu_2247_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal L5_0_cast_fu_2243_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp11_fu_2267_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal L1_0_cast_fu_2239_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal L0_0_cast_fu_2235_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp11_cast_fu_2273_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp12_fu_2277_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp10_fu_2283_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_177_cast_fu_2259_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_178_cast_fu_2263_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp16_fu_2296_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal L8_cast_fu_2255_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp16_cast_fu_2302_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp14_cast_fu_2293_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp15_fu_2306_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp13_fu_2312_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp10_cast_fu_2289_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp13_cast_fu_2318_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_126_fu_2326_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_125_fu_2322_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal SUM_LS_fu_2330_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal L0_1_cast_fu_2227_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal L1_1_cast_fu_2231_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp19_cast_fu_2394_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal L5_1_cast_fu_2382_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal L4_1_cast_fu_2379_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_202_cast_fu_2391_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_201_cast_fu_2388_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_200_cast_fu_2385_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp23_fu_2408_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp22_fu_2414_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp21_fu_2402_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp22_cast_fu_2420_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp20_fu_2424_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp17_fu_2397_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp20_cast_fu_2430_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal SUM_MS_fu_2434_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal Z9_cast_fu_2376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal almostLog_H_write_as_fu_2443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal SUM_LS_2_cast_fu_2440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_2465_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2465_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_2465_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal P0_fu_536_p00 : STD_LOGIC_VECTOR (59 downto 0);
    signal P0_fu_536_p10 : STD_LOGIC_VECTOR (59 downto 0);
    signal P2_0_fu_761_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal P3_0_fu_969_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal P4_0_fu_1306_p00 : STD_LOGIC_VECTOR (60 downto 0);
    signal P4_0_fu_1306_p10 : STD_LOGIC_VECTOR (60 downto 0);
    signal P5_fu_1593_p00 : STD_LOGIC_VECTOR (54 downto 0);
    signal P5_fu_1593_p10 : STD_LOGIC_VECTOR (54 downto 0);
    signal P6_fu_1819_p00 : STD_LOGIC_VECTOR (48 downto 0);
    signal P6_fu_1819_p10 : STD_LOGIC_VECTOR (48 downto 0);
    signal P7_fu_1949_p00 : STD_LOGIC_VECTOR (42 downto 0);
    signal P7_fu_1949_p10 : STD_LOGIC_VECTOR (42 downto 0);
    signal P8_fu_2157_p00 : STD_LOGIC_VECTOR (36 downto 0);
    signal P8_fu_2157_p10 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_2465_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2465_p10 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2465_p20 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_574_p00 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_1_fu_574_p10 : STD_LOGIC_VECTOR (57 downto 0);

    component logd_mac_muladd_4ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component range_red_invtable0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component range_red_logtablbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component range_red_logtablcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component range_red_logtabldEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component range_red_logtableOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component range_red_logtablfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component range_red_logtablg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component range_red_logtablhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component range_red_logtablibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component range_red_logtabljbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component range_red_logtablkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component range_red_logtabllbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component range_red_logtablmb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component range_red_logtable6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component range_red_logtable7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (60 downto 0) );
    end component;


    component range_red_logtable8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;



begin
    invtable0_U : component range_red_invtable0
    generic map (
        DataWidth => 6,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invtable0_address0,
        ce0 => invtable0_ce0,
        q0 => invtable0_q0);

    logtable0_1_U : component range_red_logtablbkb
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable0_1_address0,
        ce0 => logtable0_1_ce0,
        q0 => logtable0_1_q0);

    logtable1_1_U : component range_red_logtablcud
    generic map (
        DataWidth => 19,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable1_1_address0,
        ce0 => logtable1_1_ce0,
        q0 => logtable1_1_q0);

    logtable2_1_U : component range_red_logtabldEe
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable2_1_address0,
        ce0 => logtable2_1_ce0,
        q0 => logtable2_1_q0);

    logtable3_1_U : component range_red_logtableOg
    generic map (
        DataWidth => 13,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable3_1_address0,
        ce0 => logtable3_1_ce0,
        q0 => logtable3_1_q0);

    logtable4_1_U : component range_red_logtablfYi
    generic map (
        DataWidth => 10,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable4_1_address0,
        ce0 => logtable4_1_ce0,
        q0 => logtable4_1_q0);

    logtable5_1_U : component range_red_logtablg8j
    generic map (
        DataWidth => 7,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable5_1_address0,
        ce0 => logtable5_1_ce0,
        q0 => logtable5_1_q0);

    logtable0_0_U : component range_red_logtablhbi
    generic map (
        DataWidth => 60,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable0_0_address0,
        ce0 => logtable0_0_ce0,
        q0 => logtable0_0_q0);

    logtable1_0_U : component range_red_logtablibs
    generic map (
        DataWidth => 60,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable1_0_address0,
        ce0 => logtable1_0_ce0,
        q0 => logtable1_0_q0);

    logtable2_0_U : component range_red_logtabljbC
    generic map (
        DataWidth => 60,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable2_0_address0,
        ce0 => logtable2_0_ce0,
        q0 => logtable2_0_q0);

    logtable3_0_U : component range_red_logtablkbM
    generic map (
        DataWidth => 60,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable3_0_address0,
        ce0 => logtable3_0_ce0,
        q0 => logtable3_0_q0);

    logtable4_0_U : component range_red_logtabllbW
    generic map (
        DataWidth => 56,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable4_0_address0,
        ce0 => logtable4_0_ce0,
        q0 => logtable4_0_q0);

    logtable5_0_U : component range_red_logtablmb6
    generic map (
        DataWidth => 50,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable5_0_address0,
        ce0 => logtable5_0_ce0,
        q0 => logtable5_0_q0);

    logtable6_U : component range_red_logtable6
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable6_address0,
        ce0 => logtable6_ce0,
        q0 => logtable6_q0);

    logtable7_U : component range_red_logtable7
    generic map (
        DataWidth => 61,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable7_address0,
        ce0 => logtable7_ce0,
        q0 => logtable7_q0);

    logtable8_U : component range_red_logtable8
    generic map (
        DataWidth => 58,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => logtable8_address0,
        ce0 => logtable8_ce0,
        q0 => logtable8_q0);

    logd_mac_muladd_4ncg_U1 : component logd_mac_muladd_4ncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 3,
        din2_WIDTH => 4,
        dout_WIDTH => 7)
    port map (
        din0 => grp_fu_2465_p0,
        din1 => grp_fu_2465_p1,
        din2 => grp_fu_2465_p2,
        dout => grp_fu_2465_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                A1_reg_2497 <= P0_fu_536_p2(53 downto 50);
                Z1_d_reg_2491 <= Z1_d_fu_542_p1;
                tmp_12_reg_2509 <= tmp_12_fu_564_p1;
                tmp_9_reg_2504 <= P0_fu_536_p2(53 downto 53);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                A2_reg_2524 <= tmp_8_fu_655_p2(59 downto 56);
                Z2_d_reg_2519 <= Z2_d_fu_661_p2;
                tmp_14_reg_2529 <= tmp_14_fu_721_p2;
                tmp_20_reg_2534 <= tmp_20_fu_749_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                A3_reg_2565 <= Z3_1_fu_882_p2(8 downto 5);
                Z3_1_2_reg_2560 <= Z3_1_2_fu_888_p1;
                phitmp1_cast_reg_2587 <= Z3_0_fu_803_p2(59 downto 11);
                tmp_27_reg_2577 <= tmp_27_fu_912_p1;
                tmp_34_reg_2592 <= tmp_34_fu_936_p1;
                tmp_43_cast_reg_2572 <= Z3_0_fu_803_p2(59 downto 6);
                tmp_46_reg_2602 <= tmp_46_fu_950_p1;
                tmp_48_cast_reg_2582 <= Z3_1_fu_882_p2(8 downto 6);
                tmp_67_cast_reg_2597 <= Z3_0_fu_803_p2(59 downto 56);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                A4_reg_2694 <= Z4_1_fu_1249_p2(9 downto 6);
                Z4_0_2_reg_2679 <= Z4_0_2_fu_1181_p2;
                Z4_1_reg_2684 <= Z4_1_fu_1249_p2;
                phitmp4_cast_reg_2711 <= Z4_0_fu_1175_p2(59 downto 18);
                tmp_54_reg_2689 <= tmp_54_fu_1255_p1;
                tmp_55_reg_2706 <= tmp_55_fu_1279_p1;
                tmp_89_cast_reg_2701 <= Z4_0_fu_1175_p2(59 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                A5_reg_2766 <= Z5_1_2_fu_1554_p3(6 downto 3);
                Z5_1_2_reg_2756 <= Z5_1_2_fu_1554_p3;
                tmp_75_reg_2761 <= tmp_75_fu_1560_p1;
                tmp_79_reg_2772 <= P5_fu_1593_p2(54 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                A6_reg_2782 <= A6_fu_1775_p3;
                B6_reg_2777 <= B6_fu_1687_p2;
                tmp_146_cast_reg_2796 <= Z6_0_fu_1681_p2(59 downto 24);
                tmp_88_reg_2791 <= B6_fu_1687_p2(59 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                A7_reg_2823 <= Z7_0_fu_1905_p2(60 downto 57);
                B7_reg_2818 <= B7_fu_1911_p2;
                tmp_104_reg_2839 <= P7_fu_1949_p2(42 downto 4);
                tmp_117_reg_2834 <= Z7_0_fu_1905_p2(60 downto 60);
                tmp_159_cast_reg_2829 <= Z7_0_fu_1905_p2(59 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                A8_reg_2849 <= Z8_0_fu_2095_p2(57 downto 54);
                B8_reg_2844 <= B8_fu_2101_p2;
                ZM8_reg_2855 <= Z8_0_cast25_cast_fu_2107_p2(57 downto 25);
                tmp_110_reg_2860 <= Z8_0_fu_2095_p2(58 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                InvA0_reg_2486 <= invtable0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                SUM_LS_1_reg_2935 <= SUM_LS_1_fu_2336_p2;
                Z9_reg_2920 <= Z9_fu_2221_p2;
                logtable4_1_load_reg_2925 <= logtable4_1_q0;
                logtable5_1_load_reg_2930 <= logtable5_1_q0;
                tmp18_reg_2955 <= tmp18_fu_2370_p2;
                tmp_114_reg_2945 <= logtable6_q0(63 downto 60);
                tmp_118_reg_2950 <= SUM_LS_fu_2330_p2(62 downto 60);
                tmp_127_reg_2940 <= logtable7_q0(60 downto 60);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                Z5_0_2_reg_2726 <= Z5_0_2_fu_1447_p2;
                phitmp7_cast_reg_2751 <= Z5_0_fu_1441_p2(59 downto 21);
                tmp_120_cast_reg_2746 <= Z5_0_fu_1441_p2(59 downto 16);
                tmp_71_reg_2731 <= tmp_71_fu_1501_p2;
                tmp_72_reg_2736 <= tmp_72_fu_1507_p2;
                tmp_74_reg_2741 <= tmp_74_fu_1525_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                epsZ3_0_reg_2637 <= epsZ3_0_fu_1009_p3;
                tmp14_reg_2669 <= tmp14_fu_1113_p2;
                tmp19_reg_2674 <= tmp19_fu_1119_p2;
                    tmp_35_reg_2644(8 downto 0) <= tmp_35_fu_1042_p1(8 downto 0);
                tmp_37_reg_2649 <= tmp_37_fu_1049_p1;
                tmp_39_reg_2654 <= tmp_39_fu_1052_p2;
                tmp_49_reg_2664 <= tmp_49_fu_1091_p2;
                tmp_72_cast_reg_2659 <= grp_fu_2465_p3(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                tmp_116_reg_2813 <= tmp_116_fu_1850_p1;
                tmp_91_reg_2801 <= tmp_91_fu_1825_p2;
                tmp_94_reg_2807 <= tmp_94_fu_1844_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_16_reg_2545 <= tmp_16_fu_767_p1;
                tmp_17_reg_2550 <= P2_0_fu_761_p2(59 downto 59);
                tmp_18_reg_2555 <= P2_0_fu_761_p2(63 downto 60);
                    tmp_2_reg_2539(3 downto 0) <= tmp_2_fu_758_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_1_reg_2514 <= tmp_1_fu_574_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                tmp_30_reg_2607 <= P3_0_fu_969_p2(63 downto 60);
                tmp_59_cast_reg_2612 <= P3_0_fu_969_p2(59 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_61_reg_2721 <= P4_0_fu_1306_p2(60 downto 60);
                tmp_98_cast_reg_2716 <= P4_0_fu_1306_p2(59 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    tmp_reg_2475(4 downto 0) <= tmp_fu_524_p1(4 downto 0);
            end if;
        end if;
    end process;
    tmp_reg_2475(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    tmp_2_reg_2539(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_35_reg_2644(14 downto 9) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A2_fu_667_p4 <= tmp_8_fu_655_p2(59 downto 56);
    A5_fu_1564_p4 <= Z5_1_2_fu_1554_p3(6 downto 3);
    A6_fu_1775_p3 <= 
        tmp_86_fu_1747_p2 when (tmp_85_fu_1741_p2(0) = '1') else 
        tmp_103_fu_1769_p2;
    A7_fu_1921_p4 <= Z7_0_fu_1905_p2(60 downto 57);
    A8_fu_2113_p4 <= Z8_0_fu_2095_p2(57 downto 54);
    B1_fu_623_p3 <= (tmp_12_reg_2509 & ap_const_lv9_0);
    B2_cast_fu_735_p4 <= tmp_8_fu_655_p2(55 downto 48);
    B4_1_cast_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_reg_2689),8));
    B5_1_cast_fu_1615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_reg_2761),5));
    B6_cast_fu_1803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B6_reg_2777),61));
    B6_fu_1687_p2 <= std_logic_vector(unsigned(tmp1_fu_1661_p3) + unsigned(tmp_87_fu_1677_p1));
    B7_cast_fu_2002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B7_reg_2818),58));
    B7_fu_1911_p2 <= std_logic_vector(unsigned(tmp_98_fu_1897_p3) + unsigned(tmp_116_reg_2813));
    B8_cast_fu_2148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B8_reg_2844),55));
    B8_fu_2101_p2 <= std_logic_vector(unsigned(tmp_107_fu_2085_p4) + unsigned(tmp_122_fu_2081_p1));
    L0_0_cast_fu_2235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable0_0_q0),61));
    L0_1_cast_fu_2227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable0_1_q0),24));
    L1_0_cast_fu_2239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable1_0_q0),61));
    L1_1_cast_fu_2231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable1_1_q0),24));
    L2_0_cast_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable2_0_q0),61));
    L2_1_cast_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable2_1_q0),17));
    L3_0_cast_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable3_0_q0),61));
    L3_1_cast_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable3_1_q0),17));
    L4_1_cast_fu_2379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable4_1_load_reg_2925),11));
    L5_0_cast_fu_2243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable5_0_q0),56));
    L5_1_cast_fu_2382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable5_1_load_reg_2930),11));
    L8_cast_fu_2255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(logtable8_q0),62));
    P0_fu_536_p0 <= P0_fu_536_p00(54 - 1 downto 0);
    P0_fu_536_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Y0),60));
    P0_fu_536_p1 <= P0_fu_536_p10(6 - 1 downto 0);
    P0_fu_536_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(InvA0_reg_2486),60));
    P0_fu_536_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P0_fu_536_p0) * unsigned(P0_fu_536_p1), 60));
    P2_0_fu_761_p0 <= P2_0_fu_761_p00(4 - 1 downto 0);
    P2_0_fu_761_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A2_reg_2524),64));
    P2_0_fu_761_p1 <= Z2_d_reg_2519;
    P2_0_fu_761_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &P2_0_fu_761_p0) * signed(P2_0_fu_761_p1))), 64));
    P3_0_fu_969_p0 <= tmp_28_fu_964_p1(4 - 1 downto 0);
    P3_0_fu_969_p1 <= P3_0_fu_969_p10(60 - 1 downto 0);
    P3_0_fu_969_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_954_p3),64));
    P3_0_fu_969_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P3_0_fu_969_p0) * unsigned(P3_0_fu_969_p1), 64));
    P4_0_fu_1306_p0 <= P4_0_fu_1306_p00(4 - 1 downto 0);
    P4_0_fu_1306_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A4_reg_2694),61));
    P4_0_fu_1306_p1 <= P4_0_fu_1306_p10(57 - 1 downto 0);
    P4_0_fu_1306_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ZM4_fu_1293_p3),61));
    P4_0_fu_1306_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_0_fu_1306_p0) * unsigned(P4_0_fu_1306_p1), 61));
    P5_fu_1593_p0 <= P5_fu_1593_p00(4 - 1 downto 0);
    P5_fu_1593_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A5_fu_1564_p4),55));
    P5_fu_1593_p1 <= P5_fu_1593_p10(51 - 1 downto 0);
    P5_fu_1593_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ZM5_fu_1578_p3),55));
    P5_fu_1593_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P5_fu_1593_p0) * unsigned(P5_fu_1593_p1), 55));
    P6_fu_1819_p0 <= P6_fu_1819_p00(4 - 1 downto 0);
    P6_fu_1819_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A6_reg_2782),49));
    P6_fu_1819_p1 <= P6_fu_1819_p10(45 - 1 downto 0);
    P6_fu_1819_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ZM6_fu_1806_p3),49));
    P6_fu_1819_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P6_fu_1819_p0) * unsigned(P6_fu_1819_p1), 49));
    P7_fu_1949_p0 <= P7_fu_1949_p00(4 - 1 downto 0);
    P7_fu_1949_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A7_fu_1921_p4),43));
    P7_fu_1949_p1 <= P7_fu_1949_p10(39 - 1 downto 0);
    P7_fu_1949_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ZM7_fu_1931_p4),43));
    P7_fu_1949_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P7_fu_1949_p0) * unsigned(P7_fu_1949_p1), 43));
    P8_fu_2157_p0 <= P8_fu_2157_p00(4 - 1 downto 0);
    P8_fu_2157_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A8_reg_2849),37));
    P8_fu_2157_p1 <= P8_fu_2157_p10(33 - 1 downto 0);
    P8_fu_2157_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ZM8_reg_2855),37));
    P8_fu_2157_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P8_fu_2157_p0) * unsigned(P8_fu_2157_p1), 37));
    SUM_LS_1_fu_2336_p2 <= std_logic_vector(unsigned(tmp_126_fu_2326_p1) + unsigned(tmp_125_fu_2322_p1));
    SUM_LS_2_cast_fu_2440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(SUM_LS_1_reg_2935),64));
    SUM_LS_fu_2330_p2 <= std_logic_vector(unsigned(tmp10_cast_fu_2289_p1) + unsigned(tmp13_cast_fu_2318_p1));
    SUM_MS_fu_2434_p2 <= std_logic_vector(unsigned(tmp17_fu_2397_p2) + unsigned(tmp20_cast_fu_2430_p1));
    Z1_d_fu_542_p1 <= P0_fu_536_p2(54 - 1 downto 0);
    Z2_d_fu_661_p2 <= std_logic_vector(unsigned(epsZ1_1_cast_fu_619_p1) + unsigned(tmp_11_cast_fu_651_p1));
    Z3_0_fu_803_p2 <= std_logic_vector(unsigned(tmp_21_cast_fu_800_p1) - unsigned(tmp_20_cast_fu_796_p1));
    Z3_1_1_v_fu_874_p3 <= 
        ap_const_lv10_3FF when (tmp_24_fu_856_p2(0) = '1') else 
        tmp_36_cast_cast_fu_870_p1;
    Z3_1_2_fu_888_p1 <= Z3_1_fu_882_p2(9 - 1 downto 0);
    Z3_1_fu_882_p2 <= std_logic_vector(unsigned(tmp_22_fu_832_p2) + unsigned(Z3_1_1_v_fu_874_p3));
    Z4_0_2_cast_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_0_2_reg_2679),61));
    Z4_0_2_fu_1181_p2 <= std_logic_vector(unsigned(tmp_45_fu_1171_p1) + unsigned(tmp_44_fu_1168_p1));
    Z4_0_cast_fu_1187_p2 <= std_logic_vector(unsigned(tmp_43_fu_1164_p1) + unsigned(tmp_42_fu_1161_p1));
    Z4_0_fu_1175_p2 <= std_logic_vector(unsigned(epsZ3_0_cast_fu_1125_p1) + unsigned(tmp_41_fu_1155_p2));
        Z4_1_2_cast3_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Z4_1_reg_2684),25));

    Z4_1_2_v_fu_1241_p3 <= 
        ap_const_lv11_7FF when (tmp_52_fu_1223_p2(0) = '1') else 
        tmp_81_cast_cast_fu_1237_p1;
    Z4_1_fu_1249_p2 <= std_logic_vector(unsigned(tmp_50_fu_1199_p2) + unsigned(Z4_1_2_v_fu_1241_p3));
    Z5_0_2_cast_fu_1612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z5_0_2_reg_2726),61));
    Z5_0_2_fu_1447_p2 <= std_logic_vector(unsigned(tmp_69_fu_1437_p1) + unsigned(tmp_68_fu_1433_p1));
    Z5_0_cast_fu_1453_p2 <= std_logic_vector(unsigned(tmp_67_fu_1429_p1) + unsigned(tmp_66_fu_1425_p1));
    Z5_0_fu_1441_p2 <= std_logic_vector(unsigned(epsZ4_0_cast_fu_1351_p1) + unsigned(tmp_104_cast_fu_1421_p1));
        Z5_1_2_cast2_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Z5_1_2_reg_2756),25));

    Z5_1_2_fu_1554_p3 <= 
        tmp_72_reg_2736 when (tmp_71_reg_2731(0) = '1') else 
        tmp_113_cast_cast_fu_1551_p1;
    Z5_1_cast_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z5_1_fu_1473_p2),9));
    Z5_1_fu_1473_p2 <= std_logic_vector(unsigned(B4_1_cast_fu_1336_p1) + unsigned(tmp_106_cast_fu_1469_p1));
    Z6_0_cast_fu_1693_p2 <= std_logic_vector(unsigned(tmp_82_fu_1673_p1) + unsigned(tmp_80_fu_1647_p2));
    Z6_0_fu_1681_p2 <= std_logic_vector(signed(tmp_129_cast_fu_1653_p1) + signed(tmp1_cast_fu_1669_p1));
    Z6_1_fu_1713_p2 <= std_logic_vector(unsigned(B5_1_cast_fu_1615_p1) + unsigned(tmp_132_cast_fu_1709_p1));
    Z7_0_cast_cast_fu_1916_p2 <= std_logic_vector(unsigned(tmp_96_fu_1893_p1) + unsigned(tmp_94_reg_2807));
    Z7_0_fu_1905_p2 <= std_logic_vector(signed(tmp_152_cast_fu_1874_p1) + signed(tmp2_cast_fu_1889_p1));
    Z8_0_cast25_cast_fu_2107_p2 <= std_logic_vector(unsigned(tmp_106_fu_2077_p1) + unsigned(tmp_105_fu_2051_p2));
    Z8_0_fu_2095_p2 <= std_logic_vector(signed(tmp_166_cast_fu_2057_p1) + signed(tmp3_cast_fu_2073_p1));
        Z9_cast_fu_2376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Z9_reg_2920),64));

    Z9_fu_2221_p2 <= std_logic_vector(unsigned(epsZ8_0_cast_fu_2179_p1) + unsigned(tmp_113_fu_2215_p2));
    ZM4_fu_1293_p3 <= (tmp_55_reg_2706 & tmp_89_cast_reg_2701);
    ZM5_fu_1578_p3 <= (tmp_81_fu_1574_p1 & tmp_120_cast_reg_2746);
    ZM6_fu_1806_p3 <= (A6_reg_2782 & tmp_88_reg_2791);
    ZM7_fu_1931_p4 <= Z7_0_cast_cast_fu_1916_p2(60 downto 22);
    almostLog_H_write_as_fu_2443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(SUM_MS_fu_2434_p2),64));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= Z9_cast_fu_2376_p1;
    ap_return_1 <= almostLog_H_write_as_fu_2443_p1;
    ap_return_2 <= SUM_LS_2_cast_fu_2440_p1;
    epsZ1_1_cast_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ1_1_fu_612_p3),62));
    epsZ1_1_fu_612_p3 <= 
        tmp_s_fu_604_p3 when (tmp_9_reg_2504(0) = '1') else 
        epsZ1_cast_fu_600_p1;
    epsZ1_cast_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ1_fu_592_p3),60));
    epsZ1_fu_592_p3 <= 
        ap_const_lv59_0 when (tmp_5_fu_580_p2(0) = '1') else 
        tmp_6_fu_585_p3;
    epsZ2_0_cast_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ2_0_fu_683_p3),61));
    epsZ2_0_fu_683_p3 <= 
        ap_const_lv60_0 when (tmp_10_fu_677_p2(0) = '1') else 
        tmp_8_fu_655_p2;
    epsZ3_0_cast_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ3_0_reg_2637),64));
    epsZ3_0_fu_1009_p3 <= 
        ap_const_lv49_0 when (tmp_32_fu_1004_p2(0) = '1') else 
        phitmp1_cast_reg_2587;
    epsZ3_1_fu_1023_p3 <= 
        ap_const_lv20_0 when (tmp_32_fu_1004_p2(0) = '1') else 
        tmp_33_fu_1016_p3;
    epsZ4_0_cast_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ4_0_fu_1344_p3),63));
    epsZ4_0_fu_1344_p3 <= 
        ap_const_lv42_0 when (tmp_57_fu_1339_p2(0) = '1') else 
        phitmp4_cast_reg_2711;
    epsZ4_1_fu_1361_p3 <= 
        ap_const_lv25_0 when (tmp_57_fu_1339_p2(0) = '1') else 
        tmp_58_fu_1355_p2;
    epsZ5_0_fu_1623_p3 <= 
        ap_const_lv39_0 when (tmp_77_fu_1618_p2(0) = '1') else 
        phitmp7_cast_reg_2751;
    epsZ5_1_fu_1636_p3 <= 
        ap_const_lv25_0 when (tmp_77_fu_1618_p2(0) = '1') else 
        tmp_78_fu_1630_p2;
    epsZ6_0_fu_1854_p3 <= 
        ap_const_lv36_0 when (tmp_91_reg_2801(0) = '1') else 
        tmp_146_cast_reg_2796;
    epsZ6_1_fu_1867_p3 <= 
        ap_const_lv24_0 when (tmp_91_reg_2801(0) = '1') else 
        tmp_92_fu_1860_p3;
    epsZ7_0_fu_2014_p3 <= 
        ap_const_lv33_0 when (tmp_100_fu_2009_p2(0) = '1') else 
        tmp_159_cast_reg_2829;
        epsZ8_0_cast1_fu_2175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(epsZ8_0_fu_2168_p3),30));

    epsZ8_0_cast_fu_2179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ8_0_cast1_fu_2175_p1),56));
    epsZ8_0_fu_2168_p3 <= 
        ap_const_lv29_0 when (tmp_109_fu_2163_p2(0) = '1') else 
        tmp_110_reg_2860;
    grp_fu_2465_p0 <= grp_fu_2465_p00(4 - 1 downto 0);
    grp_fu_2465_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A3_reg_2565),7));
    grp_fu_2465_p1 <= grp_fu_2465_p10(3 - 1 downto 0);
    grp_fu_2465_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_cast_reg_2582),7));
    grp_fu_2465_p2 <= grp_fu_2465_p20(4 - 1 downto 0);
    grp_fu_2465_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_reg_2607),7));
    invtable0_address0 <= tmp_fu_524_p1(5 - 1 downto 0);

    invtable0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            invtable0_ce0 <= ap_const_logic_1;
        else 
            invtable0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable0_0_address0 <= tmp_reg_2475(5 - 1 downto 0);

    logtable0_0_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable0_0_ce0 <= ap_const_logic_1;
        else 
            logtable0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable0_1_address0 <= tmp_reg_2475(5 - 1 downto 0);

    logtable0_1_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable0_1_ce0 <= ap_const_logic_1;
        else 
            logtable0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable1_0_address0 <= tmp_4_fu_1983_p1(4 - 1 downto 0);

    logtable1_0_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable1_0_ce0 <= ap_const_logic_1;
        else 
            logtable1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable1_1_address0 <= tmp_4_fu_1983_p1(4 - 1 downto 0);

    logtable1_1_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable1_1_ce0 <= ap_const_logic_1;
        else 
            logtable1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable2_0_address0 <= tmp_2_reg_2539(4 - 1 downto 0);

    logtable2_0_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            logtable2_0_ce0 <= ap_const_logic_1;
        else 
            logtable2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable2_1_address0 <= tmp_2_reg_2539(4 - 1 downto 0);

    logtable2_1_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            logtable2_1_ce0 <= ap_const_logic_1;
        else 
            logtable2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable3_0_address0 <= tmp_28_fu_964_p1(4 - 1 downto 0);

    logtable3_0_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            logtable3_0_ce0 <= ap_const_logic_1;
        else 
            logtable3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable3_1_address0 <= tmp_28_fu_964_p1(4 - 1 downto 0);

    logtable3_1_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            logtable3_1_ce0 <= ap_const_logic_1;
        else 
            logtable3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable4_0_address0 <= tmp_56_fu_1988_p1(4 - 1 downto 0);

    logtable4_0_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable4_0_ce0 <= ap_const_logic_1;
        else 
            logtable4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable4_1_address0 <= tmp_56_fu_1988_p1(4 - 1 downto 0);

    logtable4_1_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable4_1_ce0 <= ap_const_logic_1;
        else 
            logtable4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable5_0_address0 <= tmp_76_fu_1993_p1(4 - 1 downto 0);

    logtable5_0_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable5_0_ce0 <= ap_const_logic_1;
        else 
            logtable5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable5_1_address0 <= tmp_76_fu_1993_p1(4 - 1 downto 0);

    logtable5_1_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable5_1_ce0 <= ap_const_logic_1;
        else 
            logtable5_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable6_address0 <= tmp_90_fu_1998_p1(4 - 1 downto 0);

    logtable6_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable6_ce0 <= ap_const_logic_1;
        else 
            logtable6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable7_address0 <= tmp_99_fu_2005_p1(4 - 1 downto 0);

    logtable7_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable7_ce0 <= ap_const_logic_1;
        else 
            logtable7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    logtable8_address0 <= tmp_108_fu_2133_p1(4 - 1 downto 0);

    logtable8_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            logtable8_ce0 <= ap_const_logic_1;
        else 
            logtable8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_mask3_fu_1215_p3 <= (tmp_51_fu_1205_p4 & ap_const_lv60_0);
    p_mask6_fu_1493_p3 <= (tmp_70_fu_1483_p4 & ap_const_lv60_0);
    p_mask9_fu_1733_p3 <= (tmp_84_fu_1723_p4 & ap_const_lv60_0);
    p_mask_fu_848_p3 <= (tmp_23_fu_838_p4 & ap_const_lv60_0);
    phitmp9_fu_2021_p3 <= (ap_const_lv23_400000 & tmp_117_reg_2834);
    tmp10_cast_fu_2289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp10_fu_2283_p2),63));
    tmp10_fu_2283_p2 <= std_logic_vector(unsigned(tmp11_cast_fu_2273_p1) + unsigned(tmp12_fu_2277_p2));
    tmp11_cast_fu_2273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp11_fu_2267_p2),61));
    tmp11_fu_2267_p2 <= std_logic_vector(unsigned(logtable4_0_q0) + unsigned(L5_0_cast_fu_2243_p1));
    tmp12_fu_2277_p2 <= std_logic_vector(unsigned(L1_0_cast_fu_2239_p1) + unsigned(L0_0_cast_fu_2235_p1));
    tmp13_cast_fu_2318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp13_fu_2312_p2),63));
    tmp13_fu_2312_p2 <= std_logic_vector(unsigned(tmp14_cast_fu_2293_p1) + unsigned(tmp15_fu_2306_p2));
    tmp14_cast_fu_2293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp14_reg_2669),62));
    tmp14_fu_1113_p2 <= std_logic_vector(unsigned(L2_0_cast_fu_1105_p1) + unsigned(L3_0_cast_fu_1109_p1));
    tmp15_fu_2306_p2 <= std_logic_vector(unsigned(L8_cast_fu_2255_p1) + unsigned(tmp16_cast_fu_2302_p1));
    tmp16_cast_fu_2302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp16_fu_2296_p2),62));
    tmp16_fu_2296_p2 <= std_logic_vector(unsigned(tmp_177_cast_fu_2259_p1) + unsigned(tmp_178_cast_fu_2263_p1));
    tmp17_fu_2397_p2 <= std_logic_vector(unsigned(tmp18_reg_2955) + unsigned(tmp19_cast_fu_2394_p1));
    tmp18_fu_2370_p2 <= std_logic_vector(unsigned(L0_1_cast_fu_2227_p1) + unsigned(L1_1_cast_fu_2231_p1));
    tmp19_cast_fu_2394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp19_reg_2674),24));
    tmp19_fu_1119_p2 <= std_logic_vector(unsigned(L3_1_cast_fu_1101_p1) + unsigned(L2_1_cast_fu_1097_p1));
    tmp1_cast_fu_1669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_1661_p3),62));
    tmp1_fu_1661_p3 <= (tmp_83_fu_1657_p1 & epsZ5_0_fu_1623_p3);
    tmp20_cast_fu_2430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp20_fu_2424_p2),24));
    tmp20_fu_2424_p2 <= std_logic_vector(unsigned(tmp21_fu_2402_p2) + unsigned(tmp22_cast_fu_2420_p1));
    tmp21_fu_2402_p2 <= std_logic_vector(unsigned(L5_1_cast_fu_2382_p1) + unsigned(L4_1_cast_fu_2379_p1));
    tmp22_cast_fu_2420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp22_fu_2414_p2),11));
    tmp22_fu_2414_p2 <= std_logic_vector(unsigned(tmp_200_cast_fu_2385_p1) + unsigned(tmp23_fu_2408_p2));
    tmp23_fu_2408_p2 <= std_logic_vector(unsigned(tmp_202_cast_fu_2391_p1) + unsigned(tmp_201_cast_fu_2388_p1));
    tmp2_cast_fu_1889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_1881_p3),62));
    tmp2_fu_1881_p3 <= (epsZ6_1_fu_1867_p3 & epsZ6_0_fu_1854_p3);
    tmp3_cast_fu_2073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_2061_p5),59));
    tmp3_fu_2061_p5 <= (((tmp_120_fu_2036_p3 & ap_const_lv22_0) & tmp_121_fu_2044_p1) & epsZ7_0_fu_2014_p3);
    tmp_100_fu_2009_p2 <= "1" when (A7_reg_2823 = ap_const_lv4_0) else "0";
    tmp_101_cast_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1388_p3),62));
    tmp_101_fu_2028_p3 <= 
        ap_const_lv24_0 when (tmp_100_fu_2009_p2(0) = '1') else 
        phitmp9_fu_2021_p3;
        tmp_102_cast_fu_1405_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_63_fu_1399_p2),62));

    tmp_102_fu_1765_p1 <= Z6_1_fu_1713_p2(4 - 1 downto 0);
    tmp_103_fu_1769_p2 <= std_logic_vector(unsigned(tmp_102_fu_1765_p1) + unsigned(tmp_97_fu_1761_p1));
        tmp_104_cast_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_fu_1415_p2),63));

    tmp_105_cast_fu_1459_p4 <= epsZ4_1_fu_1361_p3(24 downto 18);
    tmp_105_fu_2051_p2 <= std_logic_vector(unsigned(B7_cast_fu_2002_p1) - unsigned(tmp_165_cast_fu_2048_p1));
    tmp_106_cast_fu_1469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_cast_fu_1459_p4),8));
    tmp_106_fu_2077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_2061_p5),58));
    tmp_107_fu_2085_p4 <= ((ap_const_lv20_0 & tmp_121_fu_2044_p1) & epsZ7_0_fu_2014_p3);
    tmp_108_fu_2133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A8_fu_2113_p4),64));
    tmp_109_fu_2163_p2 <= "1" when (A8_reg_2849 = ap_const_lv4_0) else "0";
    tmp_10_cast_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_634_p3),60));
    tmp_10_fu_677_p2 <= "1" when (A2_fu_667_p4 = ap_const_lv4_0) else "0";
    tmp_111_fu_2191_p4 <= P8_fu_2157_p2(36 downto 4);
    tmp_112_cast_fu_1521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_1513_p3),8));
    tmp_112_fu_2205_p2 <= std_logic_vector(unsigned(B8_cast_fu_2148_p1) + unsigned(tmp_173_cast_cast_fu_2183_p3));
    tmp_113_cast_cast_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_reg_2741),9));
    tmp_113_fu_2215_p2 <= std_logic_vector(unsigned(tmp_175_cast_fu_2211_p1) - unsigned(tmp_174_cast_fu_2201_p1));
    tmp_115_fu_1877_p1 <= epsZ6_1_fu_1867_p3(21 - 1 downto 0);
    tmp_116_fu_1850_p1 <= tmp_94_fu_1844_p2(57 - 1 downto 0);
        tmp_11_cast_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_645_p2),62));

    tmp_11_fu_703_p2 <= std_logic_vector(unsigned(tmp_15_fu_699_p1) + unsigned(tmp_13_fu_695_p1));
    tmp_120_fu_2036_p3 <= tmp_101_fu_2028_p3(23 downto 23);
    tmp_121_fu_2044_p1 <= tmp_101_fu_2028_p3(1 - 1 downto 0);
    tmp_122_fu_2081_p1 <= tmp_105_fu_2051_p2(54 - 1 downto 0);
    tmp_123_fu_2247_p1 <= logtable6_q0(60 - 1 downto 0);
    tmp_124_fu_2251_p1 <= logtable7_q0(60 - 1 downto 0);
    tmp_125_fu_2322_p1 <= tmp10_fu_2283_p2(60 - 1 downto 0);
    tmp_126_fu_2326_p1 <= tmp13_fu_2312_p2(60 - 1 downto 0);
    tmp_128_cast_fu_1644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_reg_2772),61));
        tmp_129_cast_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_80_fu_1647_p2),62));

    tmp_12_fu_564_p1 <= P0_fu_536_p2(50 - 1 downto 0);
    tmp_131_cast_fu_1699_p4 <= epsZ5_1_fu_1636_p3(24 downto 21);
    tmp_132_cast_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_131_cast_fu_1699_p4),5));
    tmp_13_fu_695_p1 <= tmp_7_fu_645_p2(48 - 1 downto 0);
    tmp_14_fu_721_p2 <= std_logic_vector(unsigned(epsZ2_0_cast_fu_691_p1) + unsigned(tmp_18_cast_fu_717_p1));
    tmp_151_cast_fu_1840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_93_fu_1830_p4),61));
        tmp_152_cast_fu_1874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_94_reg_2807),62));

    tmp_15_fu_699_p1 <= epsZ1_1_fu_612_p3(48 - 1 downto 0);
    tmp_165_cast_fu_2048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_104_reg_2839),58));
        tmp_166_cast_fu_2057_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_105_fu_2051_p2),59));

    tmp_16_fu_767_p1 <= P2_0_fu_761_p2(59 - 1 downto 0);
    tmp_173_cast_cast_fu_2183_p3 <= 
        ap_const_lv55_0 when (tmp_109_fu_2163_p2(0) = '1') else 
        ap_const_lv55_20000000000000;
    tmp_174_cast_fu_2201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_111_fu_2191_p4),56));
    tmp_175_cast_fu_2211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_fu_2205_p2),56));
    tmp_177_cast_fu_2259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_124_fu_2251_p1),61));
    tmp_178_cast_fu_2263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_123_fu_2247_p1),61));
    tmp_17_cast_fu_709_p3 <= (tmp_11_fu_703_p2 & ap_const_lv12_0);
    tmp_18_cast_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_cast_fu_709_p3),61));
    tmp_19_cast_fu_789_p3 <= (tmp_16_reg_2545 & ap_const_lv1_0);
    tmp_19_fu_812_p3 <= (tmp_18_reg_2555 & ap_const_lv1_0);
    tmp_1_fu_574_p0 <= tmp_1_fu_574_p00(4 - 1 downto 0);
    tmp_1_fu_574_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_reg_2497),58));
    tmp_1_fu_574_p1 <= tmp_1_fu_574_p10(54 - 1 downto 0);
    tmp_1_fu_574_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z1_d_reg_2491),58));
    tmp_1_fu_574_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_574_p0) * unsigned(tmp_1_fu_574_p1), 58));
    tmp_200_cast_fu_2385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_127_reg_2940),5));
    tmp_201_cast_fu_2388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_reg_2945),5));
    tmp_202_cast_fu_2391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_118_reg_2950),5));
    tmp_20_cast_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_cast_fu_789_p3),62));
    tmp_20_fu_749_p2 <= std_logic_vector(unsigned(tmp_22_cast_cast_fu_727_p3) + unsigned(tmp_23_cast_fu_745_p1));
    tmp_21_cast_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_2529),62));
    tmp_21_fu_826_p2 <= std_logic_vector(unsigned(tmp_28_cast_fu_823_p1) - unsigned(tmp_25_cast_fu_809_p1));
    tmp_22_cast_cast_fu_727_p3 <= 
        ap_const_lv9_0 when (tmp_10_fu_677_p2(0) = '1') else 
        ap_const_lv9_80;
    tmp_22_fu_832_p2 <= std_logic_vector(unsigned(tmp_21_fu_826_p2) - unsigned(tmp_27_cast_fu_819_p1));
    tmp_23_cast_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B2_cast_fu_735_p4),9));
    tmp_23_fu_838_p4 <= Z3_0_fu_803_p2(61 downto 60);
    tmp_24_fu_856_p2 <= "1" when (p_mask_fu_848_p3 = ap_const_lv62_3000000000000000) else "0";
    tmp_25_cast_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_reg_2550),10));
    tmp_25_fu_862_p3 <= Z3_0_fu_803_p2(60 downto 60);
    tmp_26_fu_954_p3 <= (tmp_27_reg_2577 & tmp_43_cast_reg_2572);
    tmp_27_cast_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_812_p3),10));
    tmp_27_fu_912_p1 <= Z3_1_fu_882_p2(6 - 1 downto 0);
    tmp_28_cast_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_reg_2534),10));
    tmp_28_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A3_reg_2565),64));
    tmp_2_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A2_reg_2524),64));
    tmp_32_fu_1004_p2 <= "1" when (A3_reg_2565 = ap_const_lv4_0) else "0";
    tmp_33_fu_1016_p3 <= (ap_const_lv11_400 & Z3_1_2_reg_2560);
    tmp_34_fu_936_p1 <= Z3_0_fu_803_p2(56 - 1 downto 0);
    tmp_35_fu_1042_p1 <= epsZ3_1_fu_1023_p3(15 - 1 downto 0);
    tmp_36_cast_cast_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_862_p3),10));
    tmp_36_fu_1128_p3 <= (tmp_35_reg_2644 & ap_const_lv49_0);
    tmp_37_fu_1049_p1 <= grp_fu_2465_p3(4 - 1 downto 0);
    tmp_38_fu_1135_p3 <= (tmp_37_reg_2649 & ap_const_lv56_0);
    tmp_39_fu_1052_p2 <= std_logic_vector(unsigned(tmp_56_cast_fu_1038_p1) - unsigned(tmp_60_cast_fu_1046_p1));
    tmp_3_fu_634_p3 <= (tmp_1_reg_2514 & ap_const_lv1_0);
    tmp_40_fu_1149_p2 <= std_logic_vector(unsigned(tmp_36_fu_1128_p3) + unsigned(tmp_64_cast_fu_1146_p1));
    tmp_41_fu_1155_p2 <= std_logic_vector(unsigned(tmp_40_fu_1149_p2) - unsigned(tmp_63_cast_fu_1142_p1));
    tmp_42_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ3_0_reg_2637),61));
    tmp_43_fu_1164_p1 <= tmp_41_fu_1155_p2(61 - 1 downto 0);
    tmp_44_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ3_0_reg_2637),60));
    tmp_45_fu_1171_p1 <= tmp_41_fu_1155_p2(60 - 1 downto 0);
    tmp_46_fu_950_p1 <= Z3_1_fu_882_p2(5 - 1 downto 0);
    tmp_47_fu_1058_p3 <= (tmp_46_reg_2602 & tmp_67_cast_reg_2597);
    tmp_48_fu_1068_p4 <= epsZ3_1_fu_1023_p3(19 downto 11);
    tmp_49_fu_1091_p2 <= std_logic_vector(unsigned(tmp_70_cast_fu_1064_p1) + unsigned(tmp_71_cast_fu_1078_p1));
    tmp_4_fu_1983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_reg_2497),64));
    tmp_50_fu_1199_p2 <= std_logic_vector(unsigned(tmp_74_cast_fu_1196_p1) - unsigned(tmp_73_cast_fu_1193_p1));
    tmp_51_fu_1205_p4 <= Z4_0_fu_1175_p2(63 downto 60);
    tmp_52_fu_1223_p2 <= "1" when (p_mask3_fu_1215_p3 = ap_const_lv64_F000000000000000) else "0";
    tmp_53_fu_1229_p3 <= Z4_0_cast_fu_1187_p2(60 downto 60);
    tmp_54_fu_1255_p1 <= Z4_1_fu_1249_p2(6 - 1 downto 0);
    tmp_55_cast_fu_1031_p3 <= (tmp_34_reg_2592 & ap_const_lv4_0);
    tmp_55_fu_1279_p1 <= Z4_1_fu_1249_p2(10 - 1 downto 0);
    tmp_56_cast_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_cast_fu_1031_p3),61));
    tmp_56_fu_1988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A4_reg_2694),64));
    tmp_57_fu_1339_p2 <= "1" when (A4_reg_2694 = ap_const_lv4_0) else "0";
    tmp_58_fu_1355_p2 <= (ap_const_lv25_800000 or Z4_1_2_cast3_fu_1330_p1);
    tmp_59_fu_1369_p1 <= epsZ4_1_fu_1361_p3(18 - 1 downto 0);
    tmp_5_fu_580_p2 <= "1" when (A1_reg_2497 = ap_const_lv4_0) else "0";
    tmp_60_cast_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_cast_reg_2612),61));
    tmp_60_fu_1373_p3 <= (tmp_59_fu_1369_p1 & ap_const_lv42_0);
    tmp_62_fu_1388_p3 <= (tmp_61_reg_2721 & ap_const_lv56_0);
    tmp_63_cast_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_1135_p3),64));
    tmp_63_fu_1399_p2 <= std_logic_vector(unsigned(Z4_0_2_cast_fu_1333_p1) - unsigned(tmp_99_cast_fu_1385_p1));
        tmp_64_cast_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_39_reg_2654),64));

    tmp_64_fu_1409_p2 <= std_logic_vector(unsigned(tmp_97_cast_fu_1381_p1) + unsigned(tmp_102_cast_fu_1405_p1));
    tmp_65_fu_1415_p2 <= std_logic_vector(unsigned(tmp_64_fu_1409_p2) - unsigned(tmp_101_cast_fu_1395_p1));
    tmp_66_fu_1425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ4_0_fu_1344_p3),61));
    tmp_67_fu_1429_p1 <= tmp_65_fu_1415_p2(61 - 1 downto 0);
    tmp_68_fu_1433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(epsZ4_0_fu_1344_p3),60));
    tmp_69_fu_1437_p1 <= tmp_65_fu_1415_p2(60 - 1 downto 0);
    tmp_6_fu_585_p3 <= (ap_const_lv5_10 & Z1_d_reg_2491);
    tmp_70_cast_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_1058_p3),10));
    tmp_70_fu_1483_p4 <= Z5_0_fu_1441_p2(62 downto 60);
    tmp_71_cast_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_1068_p4),10));
    tmp_71_fu_1501_p2 <= "1" when (p_mask6_fu_1493_p3 = ap_const_lv63_7000000000000000) else "0";
    tmp_72_fu_1507_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(Z5_1_cast_fu_1479_p1));
    tmp_73_cast_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_cast_reg_2659),11));
    tmp_73_fu_1513_p3 <= Z5_0_cast_fu_1453_p2(60 downto 60);
    tmp_74_cast_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_reg_2664),11));
    tmp_74_fu_1525_p2 <= std_logic_vector(unsigned(Z5_1_fu_1473_p2) + unsigned(tmp_112_cast_fu_1521_p1));
    tmp_75_fu_1560_p1 <= Z5_1_2_fu_1554_p3(3 - 1 downto 0);
    tmp_76_fu_1993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A5_reg_2766),64));
    tmp_77_fu_1618_p2 <= "1" when (A5_reg_2766 = ap_const_lv4_0) else "0";
    tmp_78_fu_1630_p2 <= (ap_const_lv25_800000 or Z5_1_2_cast2_fu_1609_p1);
    tmp_7_cast_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B1_fu_623_p3),60));
    tmp_7_fu_645_p2 <= std_logic_vector(unsigned(tmp_7_cast_fu_630_p1) - unsigned(tmp_10_cast_fu_641_p1));
    tmp_80_fu_1647_p2 <= std_logic_vector(unsigned(Z5_0_2_cast_fu_1612_p1) - unsigned(tmp_128_cast_fu_1644_p1));
    tmp_81_cast_cast_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_1229_p3),11));
    tmp_81_fu_1574_p1 <= Z5_1_2_fu_1554_p3(7 - 1 downto 0);
    tmp_82_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_1661_p3),61));
    tmp_83_fu_1657_p1 <= epsZ5_1_fu_1636_p3(21 - 1 downto 0);
    tmp_84_fu_1723_p4 <= Z6_0_fu_1681_p2(61 downto 60);
    tmp_85_fu_1741_p2 <= "1" when (p_mask9_fu_1733_p3 = ap_const_lv62_3000000000000000) else "0";
    tmp_86_fu_1747_p2 <= std_logic_vector(signed(ap_const_lv4_F) + signed(tmp_89_fu_1719_p1));
    tmp_87_fu_1677_p1 <= tmp_80_fu_1647_p2(60 - 1 downto 0);
    tmp_89_fu_1719_p1 <= Z6_1_fu_1713_p2(4 - 1 downto 0);
    tmp_8_fu_655_p2 <= std_logic_vector(signed(tmp_7_fu_645_p2) + signed(epsZ1_1_fu_612_p3));
    tmp_90_fu_1998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A6_reg_2782),64));
    tmp_91_fu_1825_p2 <= "1" when (A6_reg_2782 = ap_const_lv4_0) else "0";
    tmp_92_fu_1860_p3 <= (ap_const_lv20_80000 & A6_reg_2782);
    tmp_93_fu_1830_p4 <= P6_fu_1819_p2(48 downto 4);
    tmp_94_fu_1844_p2 <= std_logic_vector(unsigned(B6_cast_fu_1803_p1) - unsigned(tmp_151_cast_fu_1840_p1));
    tmp_95_fu_1753_p3 <= Z6_0_cast_fu_1693_p2(60 downto 60);
    tmp_96_fu_1893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_1881_p3),61));
    tmp_97_cast_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_1373_p3),62));
    tmp_97_fu_1761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_95_fu_1753_p3),4));
    tmp_98_fu_1897_p3 <= (tmp_115_fu_1877_p1 & epsZ6_0_fu_1854_p3);
    tmp_99_cast_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_98_cast_reg_2716),61));
    tmp_99_fu_2005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A7_reg_2823),64));
    tmp_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A),64));
    tmp_s_fu_604_p3 <= (epsZ1_fu_592_p3 & ap_const_lv1_0);
end behav;
