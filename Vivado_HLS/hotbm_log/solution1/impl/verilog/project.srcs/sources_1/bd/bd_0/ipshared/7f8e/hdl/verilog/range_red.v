// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module range_red (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A,
        Y0,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] A;
input  [53:0] Y0;
output  [63:0] ap_return_0;
output  [63:0] ap_return_1;
output  [63:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] invtable0_address0;
reg    invtable0_ce0;
wire   [5:0] invtable0_q0;
wire   [4:0] logtable0_1_address0;
reg    logtable0_1_ce0;
wire   [22:0] logtable0_1_q0;
wire   [3:0] logtable1_1_address0;
reg    logtable1_1_ce0;
wire   [18:0] logtable1_1_q0;
wire   [3:0] logtable2_1_address0;
reg    logtable2_1_ce0;
wire   [15:0] logtable2_1_q0;
wire   [3:0] logtable3_1_address0;
reg    logtable3_1_ce0;
wire   [12:0] logtable3_1_q0;
wire   [3:0] logtable4_1_address0;
reg    logtable4_1_ce0;
wire   [9:0] logtable4_1_q0;
wire   [3:0] logtable5_1_address0;
reg    logtable5_1_ce0;
wire   [6:0] logtable5_1_q0;
wire   [4:0] logtable0_0_address0;
reg    logtable0_0_ce0;
wire   [59:0] logtable0_0_q0;
wire   [3:0] logtable1_0_address0;
reg    logtable1_0_ce0;
wire   [59:0] logtable1_0_q0;
wire   [3:0] logtable2_0_address0;
reg    logtable2_0_ce0;
wire   [59:0] logtable2_0_q0;
wire   [3:0] logtable3_0_address0;
reg    logtable3_0_ce0;
wire   [59:0] logtable3_0_q0;
wire   [3:0] logtable4_0_address0;
reg    logtable4_0_ce0;
wire   [55:0] logtable4_0_q0;
wire   [3:0] logtable5_0_address0;
reg    logtable5_0_ce0;
wire   [49:0] logtable5_0_q0;
wire   [3:0] logtable6_address0;
reg    logtable6_ce0;
wire   [63:0] logtable6_q0;
wire   [3:0] logtable7_address0;
reg    logtable7_ce0;
wire   [60:0] logtable7_q0;
wire   [3:0] logtable8_address0;
reg    logtable8_ce0;
wire   [57:0] logtable8_q0;
wire   [63:0] tmp_fu_524_p1;
reg   [63:0] tmp_reg_2475;
reg   [5:0] InvA0_reg_2486;
wire    ap_CS_fsm_state2;
wire   [53:0] Z1_d_fu_542_p1;
reg   [53:0] Z1_d_reg_2491;
wire    ap_CS_fsm_state3;
reg   [3:0] A1_reg_2497;
reg   [0:0] tmp_9_reg_2504;
wire   [49:0] tmp_12_fu_564_p1;
reg   [49:0] tmp_12_reg_2509;
wire   [57:0] tmp_1_fu_574_p2;
reg   [57:0] tmp_1_reg_2514;
wire    ap_CS_fsm_state4;
wire   [61:0] Z2_d_fu_661_p2;
reg   [61:0] Z2_d_reg_2519;
wire    ap_CS_fsm_state5;
wire   [3:0] A2_fu_667_p4;
reg   [3:0] A2_reg_2524;
wire   [60:0] tmp_14_fu_721_p2;
reg   [60:0] tmp_14_reg_2529;
wire   [8:0] tmp_20_fu_749_p2;
reg   [8:0] tmp_20_reg_2534;
wire   [63:0] tmp_2_fu_758_p1;
reg   [63:0] tmp_2_reg_2539;
wire    ap_CS_fsm_state6;
wire   [58:0] tmp_16_fu_767_p1;
reg   [58:0] tmp_16_reg_2545;
reg   [0:0] tmp_17_reg_2550;
reg   [3:0] tmp_18_reg_2555;
wire   [8:0] Z3_1_2_fu_888_p1;
reg   [8:0] Z3_1_2_reg_2560;
wire    ap_CS_fsm_state7;
reg   [3:0] A3_reg_2565;
reg   [53:0] tmp_43_cast_reg_2572;
wire   [5:0] tmp_27_fu_912_p1;
reg   [5:0] tmp_27_reg_2577;
reg   [2:0] tmp_48_cast_reg_2582;
reg   [48:0] phitmp1_cast_reg_2587;
wire   [55:0] tmp_34_fu_936_p1;
reg   [55:0] tmp_34_reg_2592;
reg   [3:0] tmp_67_cast_reg_2597;
wire   [4:0] tmp_46_fu_950_p1;
reg   [4:0] tmp_46_reg_2602;
reg   [3:0] tmp_30_reg_2607;
wire    ap_CS_fsm_state8;
reg   [55:0] tmp_59_cast_reg_2612;
wire   [48:0] epsZ3_0_fu_1009_p3;
reg   [48:0] epsZ3_0_reg_2637;
wire    ap_CS_fsm_state9;
wire   [14:0] tmp_35_fu_1042_p1;
reg   [14:0] tmp_35_reg_2644;
wire   [3:0] tmp_37_fu_1049_p1;
reg   [3:0] tmp_37_reg_2649;
wire   [60:0] tmp_39_fu_1052_p2;
reg   [60:0] tmp_39_reg_2654;
reg   [2:0] tmp_72_cast_reg_2659;
wire   [9:0] tmp_49_fu_1091_p2;
reg   [9:0] tmp_49_reg_2664;
wire   [60:0] tmp14_fu_1113_p2;
reg   [60:0] tmp14_reg_2669;
wire   [16:0] tmp19_fu_1119_p2;
reg   [16:0] tmp19_reg_2674;
wire   [59:0] Z4_0_2_fu_1181_p2;
reg   [59:0] Z4_0_2_reg_2679;
wire    ap_CS_fsm_state10;
wire  signed [10:0] Z4_1_fu_1249_p2;
reg  signed [10:0] Z4_1_reg_2684;
wire   [5:0] tmp_54_fu_1255_p1;
reg   [5:0] tmp_54_reg_2689;
reg   [3:0] A4_reg_2694;
reg   [46:0] tmp_89_cast_reg_2701;
wire   [9:0] tmp_55_fu_1279_p1;
reg   [9:0] tmp_55_reg_2706;
reg   [41:0] phitmp4_cast_reg_2711;
reg   [55:0] tmp_98_cast_reg_2716;
wire    ap_CS_fsm_state11;
reg   [0:0] tmp_61_reg_2721;
wire   [59:0] Z5_0_2_fu_1447_p2;
reg   [59:0] Z5_0_2_reg_2726;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_71_fu_1501_p2;
reg   [0:0] tmp_71_reg_2731;
wire   [8:0] tmp_72_fu_1507_p2;
reg   [8:0] tmp_72_reg_2736;
wire   [7:0] tmp_74_fu_1525_p2;
reg   [7:0] tmp_74_reg_2741;
reg   [43:0] tmp_120_cast_reg_2746;
reg   [38:0] phitmp7_cast_reg_2751;
wire  signed [8:0] Z5_1_2_fu_1554_p3;
reg  signed [8:0] Z5_1_2_reg_2756;
wire    ap_CS_fsm_state13;
wire   [2:0] tmp_75_fu_1560_p1;
reg   [2:0] tmp_75_reg_2761;
wire   [3:0] A5_fu_1564_p4;
reg   [3:0] A5_reg_2766;
reg   [50:0] tmp_79_reg_2772;
wire   [59:0] B6_fu_1687_p2;
reg   [59:0] B6_reg_2777;
wire    ap_CS_fsm_state14;
wire   [3:0] A6_fu_1775_p3;
reg   [3:0] A6_reg_2782;
reg   [40:0] tmp_88_reg_2791;
reg   [35:0] tmp_146_cast_reg_2796;
wire   [0:0] tmp_91_fu_1825_p2;
reg   [0:0] tmp_91_reg_2801;
wire    ap_CS_fsm_state15;
wire  signed [60:0] tmp_94_fu_1844_p2;
reg  signed [60:0] tmp_94_reg_2807;
wire   [56:0] tmp_116_fu_1850_p1;
reg   [56:0] tmp_116_reg_2813;
wire   [56:0] B7_fu_1911_p2;
reg   [56:0] B7_reg_2818;
wire    ap_CS_fsm_state16;
wire   [3:0] A7_fu_1921_p4;
reg   [3:0] A7_reg_2823;
reg   [32:0] tmp_159_cast_reg_2829;
reg   [0:0] tmp_117_reg_2834;
reg   [38:0] tmp_104_reg_2839;
wire   [53:0] B8_fu_2101_p2;
reg   [53:0] B8_reg_2844;
wire    ap_CS_fsm_state17;
wire   [3:0] A8_fu_2113_p4;
reg   [3:0] A8_reg_2849;
reg   [32:0] ZM8_reg_2855;
reg   [28:0] tmp_110_reg_2860;
wire   [55:0] Z9_fu_2221_p2;
reg   [55:0] Z9_reg_2920;
wire    ap_CS_fsm_state18;
reg   [9:0] logtable4_1_load_reg_2925;
reg   [6:0] logtable5_1_load_reg_2930;
wire   [59:0] SUM_LS_1_fu_2336_p2;
reg   [59:0] SUM_LS_1_reg_2935;
reg   [0:0] tmp_127_reg_2940;
reg   [3:0] tmp_114_reg_2945;
reg   [2:0] tmp_118_reg_2950;
wire   [23:0] tmp18_fu_2370_p2;
reg   [23:0] tmp18_reg_2955;
wire   [63:0] tmp_28_fu_964_p1;
wire   [63:0] tmp_4_fu_1983_p1;
wire   [63:0] tmp_56_fu_1988_p1;
wire   [63:0] tmp_76_fu_1993_p1;
wire   [63:0] tmp_90_fu_1998_p1;
wire   [63:0] tmp_99_fu_2005_p1;
wire   [63:0] tmp_108_fu_2133_p1;
wire   [53:0] P0_fu_536_p0;
wire   [5:0] P0_fu_536_p1;
wire   [59:0] P0_fu_536_p2;
wire   [3:0] tmp_1_fu_574_p0;
wire   [53:0] tmp_1_fu_574_p1;
wire   [0:0] tmp_5_fu_580_p2;
wire   [58:0] tmp_6_fu_585_p3;
wire   [58:0] epsZ1_fu_592_p3;
wire   [59:0] tmp_s_fu_604_p3;
wire   [59:0] epsZ1_cast_fu_600_p1;
wire   [59:0] epsZ1_1_fu_612_p3;
wire   [58:0] B1_fu_623_p3;
wire   [58:0] tmp_3_fu_634_p3;
wire   [59:0] tmp_7_cast_fu_630_p1;
wire   [59:0] tmp_10_cast_fu_641_p1;
wire  signed [59:0] tmp_7_fu_645_p2;
wire   [61:0] epsZ1_1_cast_fu_619_p1;
wire  signed [61:0] tmp_11_cast_fu_651_p1;
wire   [59:0] tmp_8_fu_655_p2;
wire   [0:0] tmp_10_fu_677_p2;
wire   [59:0] epsZ2_0_fu_683_p3;
wire   [47:0] tmp_15_fu_699_p1;
wire   [47:0] tmp_13_fu_695_p1;
wire   [47:0] tmp_11_fu_703_p2;
wire   [59:0] tmp_17_cast_fu_709_p3;
wire   [60:0] epsZ2_0_cast_fu_691_p1;
wire   [60:0] tmp_18_cast_fu_717_p1;
wire   [7:0] B2_cast_fu_735_p4;
wire   [8:0] tmp_22_cast_cast_fu_727_p3;
wire   [8:0] tmp_23_cast_fu_745_p1;
wire   [3:0] P2_0_fu_761_p0;
wire  signed [61:0] P2_0_fu_761_p1;
wire   [63:0] P2_0_fu_761_p2;
wire   [59:0] tmp_19_cast_fu_789_p3;
wire   [61:0] tmp_21_cast_fu_800_p1;
wire   [61:0] tmp_20_cast_fu_796_p1;
wire   [4:0] tmp_19_fu_812_p3;
wire   [9:0] tmp_28_cast_fu_823_p1;
wire   [9:0] tmp_25_cast_fu_809_p1;
wire   [9:0] tmp_21_fu_826_p2;
wire   [9:0] tmp_27_cast_fu_819_p1;
wire   [61:0] Z3_0_fu_803_p2;
wire   [1:0] tmp_23_fu_838_p4;
wire   [61:0] p_mask_fu_848_p3;
wire   [0:0] tmp_25_fu_862_p3;
wire   [0:0] tmp_24_fu_856_p2;
wire   [9:0] tmp_36_cast_cast_fu_870_p1;
wire   [9:0] tmp_22_fu_832_p2;
wire   [9:0] Z3_1_1_v_fu_874_p3;
wire   [9:0] Z3_1_fu_882_p2;
wire   [59:0] tmp_26_fu_954_p3;
wire   [3:0] P3_0_fu_969_p0;
wire   [59:0] P3_0_fu_969_p1;
wire   [63:0] P3_0_fu_969_p2;
wire   [0:0] tmp_32_fu_1004_p2;
wire   [19:0] tmp_33_fu_1016_p3;
wire   [59:0] tmp_55_cast_fu_1031_p3;
wire   [19:0] epsZ3_1_fu_1023_p3;
wire   [6:0] grp_fu_2465_p3;
wire   [60:0] tmp_56_cast_fu_1038_p1;
wire   [60:0] tmp_60_cast_fu_1046_p1;
wire   [8:0] tmp_47_fu_1058_p3;
wire   [8:0] tmp_48_fu_1068_p4;
wire   [9:0] tmp_70_cast_fu_1064_p1;
wire   [9:0] tmp_71_cast_fu_1078_p1;
wire   [60:0] L2_0_cast_fu_1105_p1;
wire   [60:0] L3_0_cast_fu_1109_p1;
wire   [16:0] L3_1_cast_fu_1101_p1;
wire   [16:0] L2_1_cast_fu_1097_p1;
wire   [59:0] tmp_38_fu_1135_p3;
wire   [63:0] tmp_36_fu_1128_p3;
wire  signed [63:0] tmp_64_cast_fu_1146_p1;
wire   [63:0] tmp_40_fu_1149_p2;
wire   [63:0] tmp_63_cast_fu_1142_p1;
wire   [63:0] tmp_41_fu_1155_p2;
wire   [63:0] epsZ3_0_cast_fu_1125_p1;
wire   [59:0] tmp_45_fu_1171_p1;
wire   [59:0] tmp_44_fu_1168_p1;
wire   [60:0] tmp_43_fu_1164_p1;
wire   [60:0] tmp_42_fu_1161_p1;
wire   [10:0] tmp_74_cast_fu_1196_p1;
wire   [10:0] tmp_73_cast_fu_1193_p1;
wire   [63:0] Z4_0_fu_1175_p2;
wire   [3:0] tmp_51_fu_1205_p4;
wire   [63:0] p_mask3_fu_1215_p3;
wire   [60:0] Z4_0_cast_fu_1187_p2;
wire   [0:0] tmp_53_fu_1229_p3;
wire   [0:0] tmp_52_fu_1223_p2;
wire   [10:0] tmp_81_cast_cast_fu_1237_p1;
wire   [10:0] tmp_50_fu_1199_p2;
wire   [10:0] Z4_1_2_v_fu_1241_p3;
wire   [56:0] ZM4_fu_1293_p3;
wire   [3:0] P4_0_fu_1306_p0;
wire   [56:0] P4_0_fu_1306_p1;
wire   [60:0] P4_0_fu_1306_p2;
wire   [0:0] tmp_57_fu_1339_p2;
wire   [41:0] epsZ4_0_fu_1344_p3;
wire  signed [24:0] Z4_1_2_cast3_fu_1330_p1;
wire   [24:0] tmp_58_fu_1355_p2;
wire   [24:0] epsZ4_1_fu_1361_p3;
wire   [17:0] tmp_59_fu_1369_p1;
wire   [59:0] tmp_60_fu_1373_p3;
wire   [56:0] tmp_62_fu_1388_p3;
wire   [60:0] Z4_0_2_cast_fu_1333_p1;
wire   [60:0] tmp_99_cast_fu_1385_p1;
wire   [60:0] tmp_63_fu_1399_p2;
wire   [61:0] tmp_97_cast_fu_1381_p1;
wire  signed [61:0] tmp_102_cast_fu_1405_p1;
wire   [61:0] tmp_64_fu_1409_p2;
wire   [61:0] tmp_101_cast_fu_1395_p1;
wire  signed [61:0] tmp_65_fu_1415_p2;
wire   [62:0] epsZ4_0_cast_fu_1351_p1;
wire  signed [62:0] tmp_104_cast_fu_1421_p1;
wire   [59:0] tmp_69_fu_1437_p1;
wire   [59:0] tmp_68_fu_1433_p1;
wire   [60:0] tmp_67_fu_1429_p1;
wire   [60:0] tmp_66_fu_1425_p1;
wire   [6:0] tmp_105_cast_fu_1459_p4;
wire   [7:0] B4_1_cast_fu_1336_p1;
wire   [7:0] tmp_106_cast_fu_1469_p1;
wire   [7:0] Z5_1_fu_1473_p2;
wire   [62:0] Z5_0_fu_1441_p2;
wire   [2:0] tmp_70_fu_1483_p4;
wire   [62:0] p_mask6_fu_1493_p3;
wire   [8:0] Z5_1_cast_fu_1479_p1;
wire   [60:0] Z5_0_cast_fu_1453_p2;
wire   [0:0] tmp_73_fu_1513_p3;
wire   [7:0] tmp_112_cast_fu_1521_p1;
wire   [8:0] tmp_113_cast_cast_fu_1551_p1;
wire   [6:0] tmp_81_fu_1574_p1;
wire   [50:0] ZM5_fu_1578_p3;
wire   [3:0] P5_fu_1593_p0;
wire   [50:0] P5_fu_1593_p1;
wire   [54:0] P5_fu_1593_p2;
wire   [0:0] tmp_77_fu_1618_p2;
wire  signed [24:0] Z5_1_2_cast2_fu_1609_p1;
wire   [24:0] tmp_78_fu_1630_p2;
wire   [60:0] Z5_0_2_cast_fu_1612_p1;
wire   [60:0] tmp_128_cast_fu_1644_p1;
wire  signed [60:0] tmp_80_fu_1647_p2;
wire   [24:0] epsZ5_1_fu_1636_p3;
wire   [20:0] tmp_83_fu_1657_p1;
wire   [38:0] epsZ5_0_fu_1623_p3;
wire   [59:0] tmp1_fu_1661_p3;
wire  signed [61:0] tmp_129_cast_fu_1653_p1;
wire   [61:0] tmp1_cast_fu_1669_p1;
wire   [59:0] tmp_87_fu_1677_p1;
wire   [60:0] tmp_82_fu_1673_p1;
wire   [3:0] tmp_131_cast_fu_1699_p4;
wire   [4:0] B5_1_cast_fu_1615_p1;
wire   [4:0] tmp_132_cast_fu_1709_p1;
wire   [4:0] Z6_1_fu_1713_p2;
wire   [61:0] Z6_0_fu_1681_p2;
wire   [1:0] tmp_84_fu_1723_p4;
wire   [61:0] p_mask9_fu_1733_p3;
wire   [3:0] tmp_89_fu_1719_p1;
wire   [60:0] Z6_0_cast_fu_1693_p2;
wire   [0:0] tmp_95_fu_1753_p3;
wire   [3:0] tmp_102_fu_1765_p1;
wire   [3:0] tmp_97_fu_1761_p1;
wire   [0:0] tmp_85_fu_1741_p2;
wire   [3:0] tmp_86_fu_1747_p2;
wire   [3:0] tmp_103_fu_1769_p2;
wire   [44:0] ZM6_fu_1806_p3;
wire   [3:0] P6_fu_1819_p0;
wire   [44:0] P6_fu_1819_p1;
wire   [48:0] P6_fu_1819_p2;
wire   [44:0] tmp_93_fu_1830_p4;
wire   [60:0] B6_cast_fu_1803_p1;
wire   [60:0] tmp_151_cast_fu_1840_p1;
wire   [23:0] tmp_92_fu_1860_p3;
wire   [23:0] epsZ6_1_fu_1867_p3;
wire   [35:0] epsZ6_0_fu_1854_p3;
wire   [59:0] tmp2_fu_1881_p3;
wire   [20:0] tmp_115_fu_1877_p1;
wire  signed [61:0] tmp_152_cast_fu_1874_p1;
wire   [61:0] tmp2_cast_fu_1889_p1;
wire   [56:0] tmp_98_fu_1897_p3;
wire   [60:0] tmp_96_fu_1893_p1;
wire   [61:0] Z7_0_fu_1905_p2;
wire   [60:0] Z7_0_cast_cast_fu_1916_p2;
wire   [38:0] ZM7_fu_1931_p4;
wire   [3:0] P7_fu_1949_p0;
wire   [38:0] P7_fu_1949_p1;
wire   [42:0] P7_fu_1949_p2;
wire   [0:0] tmp_100_fu_2009_p2;
wire   [23:0] phitmp9_fu_2021_p3;
wire   [23:0] tmp_101_fu_2028_p3;
wire   [57:0] B7_cast_fu_2002_p1;
wire   [57:0] tmp_165_cast_fu_2048_p1;
wire  signed [57:0] tmp_105_fu_2051_p2;
wire   [0:0] tmp_120_fu_2036_p3;
wire   [0:0] tmp_121_fu_2044_p1;
wire   [32:0] epsZ7_0_fu_2014_p3;
wire   [56:0] tmp3_fu_2061_p5;
wire  signed [58:0] tmp_166_cast_fu_2057_p1;
wire   [58:0] tmp3_cast_fu_2073_p1;
wire   [53:0] tmp_107_fu_2085_p4;
wire   [53:0] tmp_122_fu_2081_p1;
wire   [57:0] tmp_106_fu_2077_p1;
wire   [58:0] Z8_0_fu_2095_p2;
wire   [57:0] Z8_0_cast25_cast_fu_2107_p2;
wire   [3:0] P8_fu_2157_p0;
wire   [32:0] P8_fu_2157_p1;
wire   [0:0] tmp_109_fu_2163_p2;
wire   [28:0] epsZ8_0_fu_2168_p3;
wire  signed [29:0] epsZ8_0_cast1_fu_2175_p1;
wire   [36:0] P8_fu_2157_p2;
wire   [32:0] tmp_111_fu_2191_p4;
wire   [54:0] B8_cast_fu_2148_p1;
wire   [54:0] tmp_173_cast_cast_fu_2183_p3;
wire   [54:0] tmp_112_fu_2205_p2;
wire   [55:0] tmp_175_cast_fu_2211_p1;
wire   [55:0] tmp_174_cast_fu_2201_p1;
wire   [55:0] epsZ8_0_cast_fu_2179_p1;
wire   [55:0] tmp_113_fu_2215_p2;
wire   [59:0] tmp_124_fu_2251_p1;
wire   [59:0] tmp_123_fu_2247_p1;
wire   [55:0] L5_0_cast_fu_2243_p1;
wire   [55:0] tmp11_fu_2267_p2;
wire   [60:0] L1_0_cast_fu_2239_p1;
wire   [60:0] L0_0_cast_fu_2235_p1;
wire   [60:0] tmp11_cast_fu_2273_p1;
wire   [60:0] tmp12_fu_2277_p2;
wire   [60:0] tmp10_fu_2283_p2;
wire   [60:0] tmp_177_cast_fu_2259_p1;
wire   [60:0] tmp_178_cast_fu_2263_p1;
wire   [60:0] tmp16_fu_2296_p2;
wire   [61:0] L8_cast_fu_2255_p1;
wire   [61:0] tmp16_cast_fu_2302_p1;
wire   [61:0] tmp14_cast_fu_2293_p1;
wire   [61:0] tmp15_fu_2306_p2;
wire   [61:0] tmp13_fu_2312_p2;
wire   [62:0] tmp10_cast_fu_2289_p1;
wire   [62:0] tmp13_cast_fu_2318_p1;
wire   [59:0] tmp_126_fu_2326_p1;
wire   [59:0] tmp_125_fu_2322_p1;
wire   [62:0] SUM_LS_fu_2330_p2;
wire   [23:0] L0_1_cast_fu_2227_p1;
wire   [23:0] L1_1_cast_fu_2231_p1;
wire    ap_CS_fsm_state19;
wire   [23:0] tmp19_cast_fu_2394_p1;
wire   [10:0] L5_1_cast_fu_2382_p1;
wire   [10:0] L4_1_cast_fu_2379_p1;
wire   [4:0] tmp_202_cast_fu_2391_p1;
wire   [4:0] tmp_201_cast_fu_2388_p1;
wire   [4:0] tmp_200_cast_fu_2385_p1;
wire   [4:0] tmp23_fu_2408_p2;
wire   [4:0] tmp22_fu_2414_p2;
wire   [10:0] tmp21_fu_2402_p2;
wire   [10:0] tmp22_cast_fu_2420_p1;
wire   [10:0] tmp20_fu_2424_p2;
wire   [23:0] tmp17_fu_2397_p2;
wire   [23:0] tmp20_cast_fu_2430_p1;
wire   [23:0] SUM_MS_fu_2434_p2;
wire  signed [63:0] Z9_cast_fu_2376_p1;
wire   [63:0] almostLog_H_write_as_fu_2443_p1;
wire   [63:0] SUM_LS_2_cast_fu_2440_p1;
wire   [3:0] grp_fu_2465_p0;
wire   [2:0] grp_fu_2465_p1;
wire   [3:0] grp_fu_2465_p2;
reg   [18:0] ap_NS_fsm;
wire   [59:0] P0_fu_536_p00;
wire   [59:0] P0_fu_536_p10;
wire   [63:0] P2_0_fu_761_p00;
wire   [63:0] P3_0_fu_969_p10;
wire   [60:0] P4_0_fu_1306_p00;
wire   [60:0] P4_0_fu_1306_p10;
wire   [54:0] P5_fu_1593_p00;
wire   [54:0] P5_fu_1593_p10;
wire   [48:0] P6_fu_1819_p00;
wire   [48:0] P6_fu_1819_p10;
wire   [42:0] P7_fu_1949_p00;
wire   [42:0] P7_fu_1949_p10;
wire   [36:0] P8_fu_2157_p00;
wire   [36:0] P8_fu_2157_p10;
wire   [6:0] grp_fu_2465_p00;
wire   [6:0] grp_fu_2465_p10;
wire   [6:0] grp_fu_2465_p20;
wire   [57:0] tmp_1_fu_574_p00;
wire   [57:0] tmp_1_fu_574_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
end

range_red_invtable0 #(
    .DataWidth( 6 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
invtable0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invtable0_address0),
    .ce0(invtable0_ce0),
    .q0(invtable0_q0)
);

range_red_logtablbkb #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
logtable0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable0_1_address0),
    .ce0(logtable0_1_ce0),
    .q0(logtable0_1_q0)
);

range_red_logtablcud #(
    .DataWidth( 19 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable1_1_address0),
    .ce0(logtable1_1_ce0),
    .q0(logtable1_1_q0)
);

range_red_logtabldEe #(
    .DataWidth( 16 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable2_1_address0),
    .ce0(logtable2_1_ce0),
    .q0(logtable2_1_q0)
);

range_red_logtableOg #(
    .DataWidth( 13 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable3_1_address0),
    .ce0(logtable3_1_ce0),
    .q0(logtable3_1_q0)
);

range_red_logtablfYi #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable4_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable4_1_address0),
    .ce0(logtable4_1_ce0),
    .q0(logtable4_1_q0)
);

range_red_logtablg8j #(
    .DataWidth( 7 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable5_1_address0),
    .ce0(logtable5_1_ce0),
    .q0(logtable5_1_q0)
);

range_red_logtablhbi #(
    .DataWidth( 60 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
logtable0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable0_0_address0),
    .ce0(logtable0_0_ce0),
    .q0(logtable0_0_q0)
);

range_red_logtablibs #(
    .DataWidth( 60 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable1_0_address0),
    .ce0(logtable1_0_ce0),
    .q0(logtable1_0_q0)
);

range_red_logtabljbC #(
    .DataWidth( 60 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable2_0_address0),
    .ce0(logtable2_0_ce0),
    .q0(logtable2_0_q0)
);

range_red_logtablkbM #(
    .DataWidth( 60 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable3_0_address0),
    .ce0(logtable3_0_ce0),
    .q0(logtable3_0_q0)
);

range_red_logtabllbW #(
    .DataWidth( 56 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable4_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable4_0_address0),
    .ce0(logtable4_0_ce0),
    .q0(logtable4_0_q0)
);

range_red_logtablmb6 #(
    .DataWidth( 50 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable5_0_address0),
    .ce0(logtable5_0_ce0),
    .q0(logtable5_0_q0)
);

range_red_logtable6 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable6_address0),
    .ce0(logtable6_ce0),
    .q0(logtable6_q0)
);

range_red_logtable7 #(
    .DataWidth( 61 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable7_address0),
    .ce0(logtable7_ce0),
    .q0(logtable7_q0)
);

range_red_logtable8 #(
    .DataWidth( 58 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
logtable8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(logtable8_address0),
    .ce0(logtable8_ce0),
    .q0(logtable8_q0)
);

logd_mac_muladd_4ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
logd_mac_muladd_4ncg_U1(
    .din0(grp_fu_2465_p0),
    .din1(grp_fu_2465_p1),
    .din2(grp_fu_2465_p2),
    .dout(grp_fu_2465_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A1_reg_2497 <= {{P0_fu_536_p2[53:50]}};
        Z1_d_reg_2491 <= Z1_d_fu_542_p1;
        tmp_12_reg_2509 <= tmp_12_fu_564_p1;
        tmp_9_reg_2504 <= P0_fu_536_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        A2_reg_2524 <= {{tmp_8_fu_655_p2[59:56]}};
        Z2_d_reg_2519 <= Z2_d_fu_661_p2;
        tmp_14_reg_2529 <= tmp_14_fu_721_p2;
        tmp_20_reg_2534 <= tmp_20_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        A3_reg_2565 <= {{Z3_1_fu_882_p2[8:5]}};
        Z3_1_2_reg_2560 <= Z3_1_2_fu_888_p1;
        phitmp1_cast_reg_2587 <= {{Z3_0_fu_803_p2[59:11]}};
        tmp_27_reg_2577 <= tmp_27_fu_912_p1;
        tmp_34_reg_2592 <= tmp_34_fu_936_p1;
        tmp_43_cast_reg_2572 <= {{Z3_0_fu_803_p2[59:6]}};
        tmp_46_reg_2602 <= tmp_46_fu_950_p1;
        tmp_48_cast_reg_2582 <= {{Z3_1_fu_882_p2[8:6]}};
        tmp_67_cast_reg_2597 <= {{Z3_0_fu_803_p2[59:56]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        A4_reg_2694 <= {{Z4_1_fu_1249_p2[9:6]}};
        Z4_0_2_reg_2679 <= Z4_0_2_fu_1181_p2;
        Z4_1_reg_2684 <= Z4_1_fu_1249_p2;
        phitmp4_cast_reg_2711 <= {{Z4_0_fu_1175_p2[59:18]}};
        tmp_54_reg_2689 <= tmp_54_fu_1255_p1;
        tmp_55_reg_2706 <= tmp_55_fu_1279_p1;
        tmp_89_cast_reg_2701 <= {{Z4_0_fu_1175_p2[59:13]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        A5_reg_2766 <= {{Z5_1_2_fu_1554_p3[6:3]}};
        Z5_1_2_reg_2756 <= Z5_1_2_fu_1554_p3;
        tmp_75_reg_2761 <= tmp_75_fu_1560_p1;
        tmp_79_reg_2772 <= {{P5_fu_1593_p2[54:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        A6_reg_2782 <= A6_fu_1775_p3;
        B6_reg_2777 <= B6_fu_1687_p2;
        tmp_146_cast_reg_2796 <= {{Z6_0_fu_1681_p2[59:24]}};
        tmp_88_reg_2791 <= {{B6_fu_1687_p2[59:19]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        A7_reg_2823 <= {{Z7_0_fu_1905_p2[60:57]}};
        B7_reg_2818 <= B7_fu_1911_p2;
        tmp_104_reg_2839 <= {{P7_fu_1949_p2[42:4]}};
        tmp_117_reg_2834 <= Z7_0_fu_1905_p2[32'd60];
        tmp_159_cast_reg_2829 <= {{Z7_0_fu_1905_p2[59:27]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        A8_reg_2849 <= {{Z8_0_fu_2095_p2[57:54]}};
        B8_reg_2844 <= B8_fu_2101_p2;
        ZM8_reg_2855 <= {{Z8_0_cast25_cast_fu_2107_p2[57:25]}};
        tmp_110_reg_2860 <= {{Z8_0_fu_2095_p2[58:30]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        InvA0_reg_2486 <= invtable0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        SUM_LS_1_reg_2935 <= SUM_LS_1_fu_2336_p2;
        Z9_reg_2920 <= Z9_fu_2221_p2;
        logtable4_1_load_reg_2925 <= logtable4_1_q0;
        logtable5_1_load_reg_2930 <= logtable5_1_q0;
        tmp18_reg_2955 <= tmp18_fu_2370_p2;
        tmp_114_reg_2945 <= {{logtable6_q0[63:60]}};
        tmp_118_reg_2950 <= {{SUM_LS_fu_2330_p2[62:60]}};
        tmp_127_reg_2940 <= logtable7_q0[32'd60];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Z5_0_2_reg_2726 <= Z5_0_2_fu_1447_p2;
        phitmp7_cast_reg_2751 <= {{Z5_0_fu_1441_p2[59:21]}};
        tmp_120_cast_reg_2746 <= {{Z5_0_fu_1441_p2[59:16]}};
        tmp_71_reg_2731 <= tmp_71_fu_1501_p2;
        tmp_72_reg_2736 <= tmp_72_fu_1507_p2;
        tmp_74_reg_2741 <= tmp_74_fu_1525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        epsZ3_0_reg_2637 <= epsZ3_0_fu_1009_p3;
        tmp14_reg_2669 <= tmp14_fu_1113_p2;
        tmp19_reg_2674 <= tmp19_fu_1119_p2;
        tmp_35_reg_2644[8 : 0] <= tmp_35_fu_1042_p1[8 : 0];
        tmp_37_reg_2649 <= tmp_37_fu_1049_p1;
        tmp_39_reg_2654 <= tmp_39_fu_1052_p2;
        tmp_49_reg_2664 <= tmp_49_fu_1091_p2;
        tmp_72_cast_reg_2659 <= {{grp_fu_2465_p3[6:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_116_reg_2813 <= tmp_116_fu_1850_p1;
        tmp_91_reg_2801 <= tmp_91_fu_1825_p2;
        tmp_94_reg_2807 <= tmp_94_fu_1844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_16_reg_2545 <= tmp_16_fu_767_p1;
        tmp_17_reg_2550 <= P2_0_fu_761_p2[32'd59];
        tmp_18_reg_2555 <= {{P2_0_fu_761_p2[63:60]}};
        tmp_2_reg_2539[3 : 0] <= tmp_2_fu_758_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_1_reg_2514 <= tmp_1_fu_574_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_30_reg_2607 <= {{P3_0_fu_969_p2[63:60]}};
        tmp_59_cast_reg_2612 <= {{P3_0_fu_969_p2[59:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_61_reg_2721 <= P4_0_fu_1306_p2[32'd60];
        tmp_98_cast_reg_2716 <= {{P4_0_fu_1306_p2[59:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reg_2475[4 : 0] <= tmp_fu_524_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invtable0_ce0 = 1'b1;
    end else begin
        invtable0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable0_0_ce0 = 1'b1;
    end else begin
        logtable0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable0_1_ce0 = 1'b1;
    end else begin
        logtable0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable1_0_ce0 = 1'b1;
    end else begin
        logtable1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable1_1_ce0 = 1'b1;
    end else begin
        logtable1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        logtable2_0_ce0 = 1'b1;
    end else begin
        logtable2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        logtable2_1_ce0 = 1'b1;
    end else begin
        logtable2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        logtable3_0_ce0 = 1'b1;
    end else begin
        logtable3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        logtable3_1_ce0 = 1'b1;
    end else begin
        logtable3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable4_0_ce0 = 1'b1;
    end else begin
        logtable4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable4_1_ce0 = 1'b1;
    end else begin
        logtable4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable5_0_ce0 = 1'b1;
    end else begin
        logtable5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable5_1_ce0 = 1'b1;
    end else begin
        logtable5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable6_ce0 = 1'b1;
    end else begin
        logtable6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable7_ce0 = 1'b1;
    end else begin
        logtable7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        logtable8_ce0 = 1'b1;
    end else begin
        logtable8_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A2_fu_667_p4 = {{tmp_8_fu_655_p2[59:56]}};

assign A5_fu_1564_p4 = {{Z5_1_2_fu_1554_p3[6:3]}};

assign A6_fu_1775_p3 = ((tmp_85_fu_1741_p2[0:0] === 1'b1) ? tmp_86_fu_1747_p2 : tmp_103_fu_1769_p2);

assign A7_fu_1921_p4 = {{Z7_0_fu_1905_p2[60:57]}};

assign A8_fu_2113_p4 = {{Z8_0_fu_2095_p2[57:54]}};

assign B1_fu_623_p3 = {{tmp_12_reg_2509}, {9'd0}};

assign B2_cast_fu_735_p4 = {{tmp_8_fu_655_p2[55:48]}};

assign B4_1_cast_fu_1336_p1 = tmp_54_reg_2689;

assign B5_1_cast_fu_1615_p1 = tmp_75_reg_2761;

assign B6_cast_fu_1803_p1 = B6_reg_2777;

assign B6_fu_1687_p2 = (tmp1_fu_1661_p3 + tmp_87_fu_1677_p1);

assign B7_cast_fu_2002_p1 = B7_reg_2818;

assign B7_fu_1911_p2 = (tmp_98_fu_1897_p3 + tmp_116_reg_2813);

assign B8_cast_fu_2148_p1 = B8_reg_2844;

assign B8_fu_2101_p2 = (tmp_107_fu_2085_p4 + tmp_122_fu_2081_p1);

assign L0_0_cast_fu_2235_p1 = logtable0_0_q0;

assign L0_1_cast_fu_2227_p1 = logtable0_1_q0;

assign L1_0_cast_fu_2239_p1 = logtable1_0_q0;

assign L1_1_cast_fu_2231_p1 = logtable1_1_q0;

assign L2_0_cast_fu_1105_p1 = logtable2_0_q0;

assign L2_1_cast_fu_1097_p1 = logtable2_1_q0;

assign L3_0_cast_fu_1109_p1 = logtable3_0_q0;

assign L3_1_cast_fu_1101_p1 = logtable3_1_q0;

assign L4_1_cast_fu_2379_p1 = logtable4_1_load_reg_2925;

assign L5_0_cast_fu_2243_p1 = logtable5_0_q0;

assign L5_1_cast_fu_2382_p1 = logtable5_1_load_reg_2930;

assign L8_cast_fu_2255_p1 = logtable8_q0;

assign P0_fu_536_p0 = P0_fu_536_p00;

assign P0_fu_536_p00 = Y0;

assign P0_fu_536_p1 = P0_fu_536_p10;

assign P0_fu_536_p10 = InvA0_reg_2486;

assign P0_fu_536_p2 = (P0_fu_536_p0 * P0_fu_536_p1);

assign P2_0_fu_761_p0 = P2_0_fu_761_p00;

assign P2_0_fu_761_p00 = A2_reg_2524;

assign P2_0_fu_761_p1 = Z2_d_reg_2519;

assign P2_0_fu_761_p2 = ($signed({{1'b0}, {P2_0_fu_761_p0}}) * $signed(P2_0_fu_761_p1));

assign P3_0_fu_969_p0 = tmp_28_fu_964_p1;

assign P3_0_fu_969_p1 = P3_0_fu_969_p10;

assign P3_0_fu_969_p10 = tmp_26_fu_954_p3;

assign P3_0_fu_969_p2 = (P3_0_fu_969_p0 * P3_0_fu_969_p1);

assign P4_0_fu_1306_p0 = P4_0_fu_1306_p00;

assign P4_0_fu_1306_p00 = A4_reg_2694;

assign P4_0_fu_1306_p1 = P4_0_fu_1306_p10;

assign P4_0_fu_1306_p10 = ZM4_fu_1293_p3;

assign P4_0_fu_1306_p2 = (P4_0_fu_1306_p0 * P4_0_fu_1306_p1);

assign P5_fu_1593_p0 = P5_fu_1593_p00;

assign P5_fu_1593_p00 = A5_fu_1564_p4;

assign P5_fu_1593_p1 = P5_fu_1593_p10;

assign P5_fu_1593_p10 = ZM5_fu_1578_p3;

assign P5_fu_1593_p2 = (P5_fu_1593_p0 * P5_fu_1593_p1);

assign P6_fu_1819_p0 = P6_fu_1819_p00;

assign P6_fu_1819_p00 = A6_reg_2782;

assign P6_fu_1819_p1 = P6_fu_1819_p10;

assign P6_fu_1819_p10 = ZM6_fu_1806_p3;

assign P6_fu_1819_p2 = (P6_fu_1819_p0 * P6_fu_1819_p1);

assign P7_fu_1949_p0 = P7_fu_1949_p00;

assign P7_fu_1949_p00 = A7_fu_1921_p4;

assign P7_fu_1949_p1 = P7_fu_1949_p10;

assign P7_fu_1949_p10 = ZM7_fu_1931_p4;

assign P7_fu_1949_p2 = (P7_fu_1949_p0 * P7_fu_1949_p1);

assign P8_fu_2157_p0 = P8_fu_2157_p00;

assign P8_fu_2157_p00 = A8_reg_2849;

assign P8_fu_2157_p1 = P8_fu_2157_p10;

assign P8_fu_2157_p10 = ZM8_reg_2855;

assign P8_fu_2157_p2 = (P8_fu_2157_p0 * P8_fu_2157_p1);

assign SUM_LS_1_fu_2336_p2 = (tmp_126_fu_2326_p1 + tmp_125_fu_2322_p1);

assign SUM_LS_2_cast_fu_2440_p1 = SUM_LS_1_reg_2935;

assign SUM_LS_fu_2330_p2 = (tmp10_cast_fu_2289_p1 + tmp13_cast_fu_2318_p1);

assign SUM_MS_fu_2434_p2 = (tmp17_fu_2397_p2 + tmp20_cast_fu_2430_p1);

assign Z1_d_fu_542_p1 = P0_fu_536_p2[53:0];

assign Z2_d_fu_661_p2 = ($signed(epsZ1_1_cast_fu_619_p1) + $signed(tmp_11_cast_fu_651_p1));

assign Z3_0_fu_803_p2 = (tmp_21_cast_fu_800_p1 - tmp_20_cast_fu_796_p1);

assign Z3_1_1_v_fu_874_p3 = ((tmp_24_fu_856_p2[0:0] === 1'b1) ? 10'd1023 : tmp_36_cast_cast_fu_870_p1);

assign Z3_1_2_fu_888_p1 = Z3_1_fu_882_p2[8:0];

assign Z3_1_fu_882_p2 = (tmp_22_fu_832_p2 + Z3_1_1_v_fu_874_p3);

assign Z4_0_2_cast_fu_1333_p1 = Z4_0_2_reg_2679;

assign Z4_0_2_fu_1181_p2 = (tmp_45_fu_1171_p1 + tmp_44_fu_1168_p1);

assign Z4_0_cast_fu_1187_p2 = (tmp_43_fu_1164_p1 + tmp_42_fu_1161_p1);

assign Z4_0_fu_1175_p2 = (epsZ3_0_cast_fu_1125_p1 + tmp_41_fu_1155_p2);

assign Z4_1_2_cast3_fu_1330_p1 = Z4_1_reg_2684;

assign Z4_1_2_v_fu_1241_p3 = ((tmp_52_fu_1223_p2[0:0] === 1'b1) ? 11'd2047 : tmp_81_cast_cast_fu_1237_p1);

assign Z4_1_fu_1249_p2 = (tmp_50_fu_1199_p2 + Z4_1_2_v_fu_1241_p3);

assign Z5_0_2_cast_fu_1612_p1 = Z5_0_2_reg_2726;

assign Z5_0_2_fu_1447_p2 = (tmp_69_fu_1437_p1 + tmp_68_fu_1433_p1);

assign Z5_0_cast_fu_1453_p2 = (tmp_67_fu_1429_p1 + tmp_66_fu_1425_p1);

assign Z5_0_fu_1441_p2 = ($signed(epsZ4_0_cast_fu_1351_p1) + $signed(tmp_104_cast_fu_1421_p1));

assign Z5_1_2_cast2_fu_1609_p1 = Z5_1_2_reg_2756;

assign Z5_1_2_fu_1554_p3 = ((tmp_71_reg_2731[0:0] === 1'b1) ? tmp_72_reg_2736 : tmp_113_cast_cast_fu_1551_p1);

assign Z5_1_cast_fu_1479_p1 = Z5_1_fu_1473_p2;

assign Z5_1_fu_1473_p2 = (B4_1_cast_fu_1336_p1 + tmp_106_cast_fu_1469_p1);

assign Z6_0_cast_fu_1693_p2 = ($signed(tmp_82_fu_1673_p1) + $signed(tmp_80_fu_1647_p2));

assign Z6_0_fu_1681_p2 = ($signed(tmp_129_cast_fu_1653_p1) + $signed(tmp1_cast_fu_1669_p1));

assign Z6_1_fu_1713_p2 = (B5_1_cast_fu_1615_p1 + tmp_132_cast_fu_1709_p1);

assign Z7_0_cast_cast_fu_1916_p2 = ($signed(tmp_96_fu_1893_p1) + $signed(tmp_94_reg_2807));

assign Z7_0_fu_1905_p2 = ($signed(tmp_152_cast_fu_1874_p1) + $signed(tmp2_cast_fu_1889_p1));

assign Z8_0_cast25_cast_fu_2107_p2 = ($signed(tmp_106_fu_2077_p1) + $signed(tmp_105_fu_2051_p2));

assign Z8_0_fu_2095_p2 = ($signed(tmp_166_cast_fu_2057_p1) + $signed(tmp3_cast_fu_2073_p1));

assign Z9_cast_fu_2376_p1 = $signed(Z9_reg_2920);

assign Z9_fu_2221_p2 = (epsZ8_0_cast_fu_2179_p1 + tmp_113_fu_2215_p2);

assign ZM4_fu_1293_p3 = {{tmp_55_reg_2706}, {tmp_89_cast_reg_2701}};

assign ZM5_fu_1578_p3 = {{tmp_81_fu_1574_p1}, {tmp_120_cast_reg_2746}};

assign ZM6_fu_1806_p3 = {{A6_reg_2782}, {tmp_88_reg_2791}};

assign ZM7_fu_1931_p4 = {{Z7_0_cast_cast_fu_1916_p2[60:22]}};

assign almostLog_H_write_as_fu_2443_p1 = SUM_MS_fu_2434_p2;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = Z9_cast_fu_2376_p1;

assign ap_return_1 = almostLog_H_write_as_fu_2443_p1;

assign ap_return_2 = SUM_LS_2_cast_fu_2440_p1;

assign epsZ1_1_cast_fu_619_p1 = epsZ1_1_fu_612_p3;

assign epsZ1_1_fu_612_p3 = ((tmp_9_reg_2504[0:0] === 1'b1) ? tmp_s_fu_604_p3 : epsZ1_cast_fu_600_p1);

assign epsZ1_cast_fu_600_p1 = epsZ1_fu_592_p3;

assign epsZ1_fu_592_p3 = ((tmp_5_fu_580_p2[0:0] === 1'b1) ? 59'd0 : tmp_6_fu_585_p3);

assign epsZ2_0_cast_fu_691_p1 = epsZ2_0_fu_683_p3;

assign epsZ2_0_fu_683_p3 = ((tmp_10_fu_677_p2[0:0] === 1'b1) ? 60'd0 : tmp_8_fu_655_p2);

assign epsZ3_0_cast_fu_1125_p1 = epsZ3_0_reg_2637;

assign epsZ3_0_fu_1009_p3 = ((tmp_32_fu_1004_p2[0:0] === 1'b1) ? 49'd0 : phitmp1_cast_reg_2587);

assign epsZ3_1_fu_1023_p3 = ((tmp_32_fu_1004_p2[0:0] === 1'b1) ? 20'd0 : tmp_33_fu_1016_p3);

assign epsZ4_0_cast_fu_1351_p1 = epsZ4_0_fu_1344_p3;

assign epsZ4_0_fu_1344_p3 = ((tmp_57_fu_1339_p2[0:0] === 1'b1) ? 42'd0 : phitmp4_cast_reg_2711);

assign epsZ4_1_fu_1361_p3 = ((tmp_57_fu_1339_p2[0:0] === 1'b1) ? 25'd0 : tmp_58_fu_1355_p2);

assign epsZ5_0_fu_1623_p3 = ((tmp_77_fu_1618_p2[0:0] === 1'b1) ? 39'd0 : phitmp7_cast_reg_2751);

assign epsZ5_1_fu_1636_p3 = ((tmp_77_fu_1618_p2[0:0] === 1'b1) ? 25'd0 : tmp_78_fu_1630_p2);

assign epsZ6_0_fu_1854_p3 = ((tmp_91_reg_2801[0:0] === 1'b1) ? 36'd0 : tmp_146_cast_reg_2796);

assign epsZ6_1_fu_1867_p3 = ((tmp_91_reg_2801[0:0] === 1'b1) ? 24'd0 : tmp_92_fu_1860_p3);

assign epsZ7_0_fu_2014_p3 = ((tmp_100_fu_2009_p2[0:0] === 1'b1) ? 33'd0 : tmp_159_cast_reg_2829);

assign epsZ8_0_cast1_fu_2175_p1 = $signed(epsZ8_0_fu_2168_p3);

assign epsZ8_0_cast_fu_2179_p1 = $unsigned(epsZ8_0_cast1_fu_2175_p1);

assign epsZ8_0_fu_2168_p3 = ((tmp_109_fu_2163_p2[0:0] === 1'b1) ? 29'd0 : tmp_110_reg_2860);

assign grp_fu_2465_p0 = grp_fu_2465_p00;

assign grp_fu_2465_p00 = A3_reg_2565;

assign grp_fu_2465_p1 = grp_fu_2465_p10;

assign grp_fu_2465_p10 = tmp_48_cast_reg_2582;

assign grp_fu_2465_p2 = grp_fu_2465_p20;

assign grp_fu_2465_p20 = tmp_30_reg_2607;

assign invtable0_address0 = tmp_fu_524_p1;

assign logtable0_0_address0 = tmp_reg_2475;

assign logtable0_1_address0 = tmp_reg_2475;

assign logtable1_0_address0 = tmp_4_fu_1983_p1;

assign logtable1_1_address0 = tmp_4_fu_1983_p1;

assign logtable2_0_address0 = tmp_2_reg_2539;

assign logtable2_1_address0 = tmp_2_reg_2539;

assign logtable3_0_address0 = tmp_28_fu_964_p1;

assign logtable3_1_address0 = tmp_28_fu_964_p1;

assign logtable4_0_address0 = tmp_56_fu_1988_p1;

assign logtable4_1_address0 = tmp_56_fu_1988_p1;

assign logtable5_0_address0 = tmp_76_fu_1993_p1;

assign logtable5_1_address0 = tmp_76_fu_1993_p1;

assign logtable6_address0 = tmp_90_fu_1998_p1;

assign logtable7_address0 = tmp_99_fu_2005_p1;

assign logtable8_address0 = tmp_108_fu_2133_p1;

assign p_mask3_fu_1215_p3 = {{tmp_51_fu_1205_p4}, {60'd0}};

assign p_mask6_fu_1493_p3 = {{tmp_70_fu_1483_p4}, {60'd0}};

assign p_mask9_fu_1733_p3 = {{tmp_84_fu_1723_p4}, {60'd0}};

assign p_mask_fu_848_p3 = {{tmp_23_fu_838_p4}, {60'd0}};

assign phitmp9_fu_2021_p3 = {{23'd4194304}, {tmp_117_reg_2834}};

assign tmp10_cast_fu_2289_p1 = tmp10_fu_2283_p2;

assign tmp10_fu_2283_p2 = (tmp11_cast_fu_2273_p1 + tmp12_fu_2277_p2);

assign tmp11_cast_fu_2273_p1 = tmp11_fu_2267_p2;

assign tmp11_fu_2267_p2 = (logtable4_0_q0 + L5_0_cast_fu_2243_p1);

assign tmp12_fu_2277_p2 = (L1_0_cast_fu_2239_p1 + L0_0_cast_fu_2235_p1);

assign tmp13_cast_fu_2318_p1 = tmp13_fu_2312_p2;

assign tmp13_fu_2312_p2 = (tmp14_cast_fu_2293_p1 + tmp15_fu_2306_p2);

assign tmp14_cast_fu_2293_p1 = tmp14_reg_2669;

assign tmp14_fu_1113_p2 = (L2_0_cast_fu_1105_p1 + L3_0_cast_fu_1109_p1);

assign tmp15_fu_2306_p2 = (L8_cast_fu_2255_p1 + tmp16_cast_fu_2302_p1);

assign tmp16_cast_fu_2302_p1 = tmp16_fu_2296_p2;

assign tmp16_fu_2296_p2 = (tmp_177_cast_fu_2259_p1 + tmp_178_cast_fu_2263_p1);

assign tmp17_fu_2397_p2 = (tmp18_reg_2955 + tmp19_cast_fu_2394_p1);

assign tmp18_fu_2370_p2 = (L0_1_cast_fu_2227_p1 + L1_1_cast_fu_2231_p1);

assign tmp19_cast_fu_2394_p1 = tmp19_reg_2674;

assign tmp19_fu_1119_p2 = (L3_1_cast_fu_1101_p1 + L2_1_cast_fu_1097_p1);

assign tmp1_cast_fu_1669_p1 = tmp1_fu_1661_p3;

assign tmp1_fu_1661_p3 = {{tmp_83_fu_1657_p1}, {epsZ5_0_fu_1623_p3}};

assign tmp20_cast_fu_2430_p1 = tmp20_fu_2424_p2;

assign tmp20_fu_2424_p2 = (tmp21_fu_2402_p2 + tmp22_cast_fu_2420_p1);

assign tmp21_fu_2402_p2 = (L5_1_cast_fu_2382_p1 + L4_1_cast_fu_2379_p1);

assign tmp22_cast_fu_2420_p1 = tmp22_fu_2414_p2;

assign tmp22_fu_2414_p2 = (tmp_200_cast_fu_2385_p1 + tmp23_fu_2408_p2);

assign tmp23_fu_2408_p2 = (tmp_202_cast_fu_2391_p1 + tmp_201_cast_fu_2388_p1);

assign tmp2_cast_fu_1889_p1 = tmp2_fu_1881_p3;

assign tmp2_fu_1881_p3 = {{epsZ6_1_fu_1867_p3}, {epsZ6_0_fu_1854_p3}};

assign tmp3_cast_fu_2073_p1 = tmp3_fu_2061_p5;

assign tmp3_fu_2061_p5 = {{{{tmp_120_fu_2036_p3}, {22'd0}}, {tmp_121_fu_2044_p1}}, {epsZ7_0_fu_2014_p3}};

assign tmp_100_fu_2009_p2 = ((A7_reg_2823 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_101_cast_fu_1395_p1 = tmp_62_fu_1388_p3;

assign tmp_101_fu_2028_p3 = ((tmp_100_fu_2009_p2[0:0] === 1'b1) ? 24'd0 : phitmp9_fu_2021_p3);

assign tmp_102_cast_fu_1405_p1 = $signed(tmp_63_fu_1399_p2);

assign tmp_102_fu_1765_p1 = Z6_1_fu_1713_p2[3:0];

assign tmp_103_fu_1769_p2 = (tmp_102_fu_1765_p1 + tmp_97_fu_1761_p1);

assign tmp_104_cast_fu_1421_p1 = tmp_65_fu_1415_p2;

assign tmp_105_cast_fu_1459_p4 = {{epsZ4_1_fu_1361_p3[24:18]}};

assign tmp_105_fu_2051_p2 = (B7_cast_fu_2002_p1 - tmp_165_cast_fu_2048_p1);

assign tmp_106_cast_fu_1469_p1 = tmp_105_cast_fu_1459_p4;

assign tmp_106_fu_2077_p1 = tmp3_fu_2061_p5;

assign tmp_107_fu_2085_p4 = {{{{20'd0}, {tmp_121_fu_2044_p1}}}, {epsZ7_0_fu_2014_p3}};

assign tmp_108_fu_2133_p1 = A8_fu_2113_p4;

assign tmp_109_fu_2163_p2 = ((A8_reg_2849 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_10_cast_fu_641_p1 = tmp_3_fu_634_p3;

assign tmp_10_fu_677_p2 = ((A2_fu_667_p4 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_111_fu_2191_p4 = {{P8_fu_2157_p2[36:4]}};

assign tmp_112_cast_fu_1521_p1 = tmp_73_fu_1513_p3;

assign tmp_112_fu_2205_p2 = (B8_cast_fu_2148_p1 + tmp_173_cast_cast_fu_2183_p3);

assign tmp_113_cast_cast_fu_1551_p1 = tmp_74_reg_2741;

assign tmp_113_fu_2215_p2 = (tmp_175_cast_fu_2211_p1 - tmp_174_cast_fu_2201_p1);

assign tmp_115_fu_1877_p1 = epsZ6_1_fu_1867_p3[20:0];

assign tmp_116_fu_1850_p1 = tmp_94_fu_1844_p2[56:0];

assign tmp_11_cast_fu_651_p1 = tmp_7_fu_645_p2;

assign tmp_11_fu_703_p2 = (tmp_15_fu_699_p1 + tmp_13_fu_695_p1);

assign tmp_120_fu_2036_p3 = tmp_101_fu_2028_p3[32'd23];

assign tmp_121_fu_2044_p1 = tmp_101_fu_2028_p3[0:0];

assign tmp_122_fu_2081_p1 = tmp_105_fu_2051_p2[53:0];

assign tmp_123_fu_2247_p1 = logtable6_q0[59:0];

assign tmp_124_fu_2251_p1 = logtable7_q0[59:0];

assign tmp_125_fu_2322_p1 = tmp10_fu_2283_p2[59:0];

assign tmp_126_fu_2326_p1 = tmp13_fu_2312_p2[59:0];

assign tmp_128_cast_fu_1644_p1 = tmp_79_reg_2772;

assign tmp_129_cast_fu_1653_p1 = tmp_80_fu_1647_p2;

assign tmp_12_fu_564_p1 = P0_fu_536_p2[49:0];

assign tmp_131_cast_fu_1699_p4 = {{epsZ5_1_fu_1636_p3[24:21]}};

assign tmp_132_cast_fu_1709_p1 = tmp_131_cast_fu_1699_p4;

assign tmp_13_fu_695_p1 = tmp_7_fu_645_p2[47:0];

assign tmp_14_fu_721_p2 = (epsZ2_0_cast_fu_691_p1 + tmp_18_cast_fu_717_p1);

assign tmp_151_cast_fu_1840_p1 = tmp_93_fu_1830_p4;

assign tmp_152_cast_fu_1874_p1 = tmp_94_reg_2807;

assign tmp_15_fu_699_p1 = epsZ1_1_fu_612_p3[47:0];

assign tmp_165_cast_fu_2048_p1 = tmp_104_reg_2839;

assign tmp_166_cast_fu_2057_p1 = tmp_105_fu_2051_p2;

assign tmp_16_fu_767_p1 = P2_0_fu_761_p2[58:0];

assign tmp_173_cast_cast_fu_2183_p3 = ((tmp_109_fu_2163_p2[0:0] === 1'b1) ? 55'd0 : 55'd9007199254740992);

assign tmp_174_cast_fu_2201_p1 = tmp_111_fu_2191_p4;

assign tmp_175_cast_fu_2211_p1 = tmp_112_fu_2205_p2;

assign tmp_177_cast_fu_2259_p1 = tmp_124_fu_2251_p1;

assign tmp_178_cast_fu_2263_p1 = tmp_123_fu_2247_p1;

assign tmp_17_cast_fu_709_p3 = {{tmp_11_fu_703_p2}, {12'd0}};

assign tmp_18_cast_fu_717_p1 = tmp_17_cast_fu_709_p3;

assign tmp_19_cast_fu_789_p3 = {{tmp_16_reg_2545}, {1'd0}};

assign tmp_19_fu_812_p3 = {{tmp_18_reg_2555}, {1'd0}};

assign tmp_1_fu_574_p0 = tmp_1_fu_574_p00;

assign tmp_1_fu_574_p00 = A1_reg_2497;

assign tmp_1_fu_574_p1 = tmp_1_fu_574_p10;

assign tmp_1_fu_574_p10 = Z1_d_reg_2491;

assign tmp_1_fu_574_p2 = (tmp_1_fu_574_p0 * tmp_1_fu_574_p1);

assign tmp_200_cast_fu_2385_p1 = tmp_127_reg_2940;

assign tmp_201_cast_fu_2388_p1 = tmp_114_reg_2945;

assign tmp_202_cast_fu_2391_p1 = tmp_118_reg_2950;

assign tmp_20_cast_fu_796_p1 = tmp_19_cast_fu_789_p3;

assign tmp_20_fu_749_p2 = (tmp_22_cast_cast_fu_727_p3 + tmp_23_cast_fu_745_p1);

assign tmp_21_cast_fu_800_p1 = tmp_14_reg_2529;

assign tmp_21_fu_826_p2 = (tmp_28_cast_fu_823_p1 - tmp_25_cast_fu_809_p1);

assign tmp_22_cast_cast_fu_727_p3 = ((tmp_10_fu_677_p2[0:0] === 1'b1) ? 9'd0 : 9'd128);

assign tmp_22_fu_832_p2 = (tmp_21_fu_826_p2 - tmp_27_cast_fu_819_p1);

assign tmp_23_cast_fu_745_p1 = B2_cast_fu_735_p4;

assign tmp_23_fu_838_p4 = {{Z3_0_fu_803_p2[61:60]}};

assign tmp_24_fu_856_p2 = ((p_mask_fu_848_p3 == 62'd3458764513820540928) ? 1'b1 : 1'b0);

assign tmp_25_cast_fu_809_p1 = tmp_17_reg_2550;

assign tmp_25_fu_862_p3 = Z3_0_fu_803_p2[32'd60];

assign tmp_26_fu_954_p3 = {{tmp_27_reg_2577}, {tmp_43_cast_reg_2572}};

assign tmp_27_cast_fu_819_p1 = tmp_19_fu_812_p3;

assign tmp_27_fu_912_p1 = Z3_1_fu_882_p2[5:0];

assign tmp_28_cast_fu_823_p1 = tmp_20_reg_2534;

assign tmp_28_fu_964_p1 = A3_reg_2565;

assign tmp_2_fu_758_p1 = A2_reg_2524;

assign tmp_32_fu_1004_p2 = ((A3_reg_2565 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_33_fu_1016_p3 = {{11'd1024}, {Z3_1_2_reg_2560}};

assign tmp_34_fu_936_p1 = Z3_0_fu_803_p2[55:0];

assign tmp_35_fu_1042_p1 = epsZ3_1_fu_1023_p3[14:0];

assign tmp_36_cast_cast_fu_870_p1 = tmp_25_fu_862_p3;

assign tmp_36_fu_1128_p3 = {{tmp_35_reg_2644}, {49'd0}};

assign tmp_37_fu_1049_p1 = grp_fu_2465_p3[3:0];

assign tmp_38_fu_1135_p3 = {{tmp_37_reg_2649}, {56'd0}};

assign tmp_39_fu_1052_p2 = (tmp_56_cast_fu_1038_p1 - tmp_60_cast_fu_1046_p1);

assign tmp_3_fu_634_p3 = {{tmp_1_reg_2514}, {1'd0}};

assign tmp_40_fu_1149_p2 = ($signed(tmp_36_fu_1128_p3) + $signed(tmp_64_cast_fu_1146_p1));

assign tmp_41_fu_1155_p2 = (tmp_40_fu_1149_p2 - tmp_63_cast_fu_1142_p1);

assign tmp_42_fu_1161_p1 = epsZ3_0_reg_2637;

assign tmp_43_fu_1164_p1 = tmp_41_fu_1155_p2[60:0];

assign tmp_44_fu_1168_p1 = epsZ3_0_reg_2637;

assign tmp_45_fu_1171_p1 = tmp_41_fu_1155_p2[59:0];

assign tmp_46_fu_950_p1 = Z3_1_fu_882_p2[4:0];

assign tmp_47_fu_1058_p3 = {{tmp_46_reg_2602}, {tmp_67_cast_reg_2597}};

assign tmp_48_fu_1068_p4 = {{epsZ3_1_fu_1023_p3[19:11]}};

assign tmp_49_fu_1091_p2 = (tmp_70_cast_fu_1064_p1 + tmp_71_cast_fu_1078_p1);

assign tmp_4_fu_1983_p1 = A1_reg_2497;

assign tmp_50_fu_1199_p2 = (tmp_74_cast_fu_1196_p1 - tmp_73_cast_fu_1193_p1);

assign tmp_51_fu_1205_p4 = {{Z4_0_fu_1175_p2[63:60]}};

assign tmp_52_fu_1223_p2 = ((p_mask3_fu_1215_p3 == 64'd17293822569102704640) ? 1'b1 : 1'b0);

assign tmp_53_fu_1229_p3 = Z4_0_cast_fu_1187_p2[32'd60];

assign tmp_54_fu_1255_p1 = Z4_1_fu_1249_p2[5:0];

assign tmp_55_cast_fu_1031_p3 = {{tmp_34_reg_2592}, {4'd0}};

assign tmp_55_fu_1279_p1 = Z4_1_fu_1249_p2[9:0];

assign tmp_56_cast_fu_1038_p1 = tmp_55_cast_fu_1031_p3;

assign tmp_56_fu_1988_p1 = A4_reg_2694;

assign tmp_57_fu_1339_p2 = ((A4_reg_2694 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_58_fu_1355_p2 = (25'd8388608 | Z4_1_2_cast3_fu_1330_p1);

assign tmp_59_fu_1369_p1 = epsZ4_1_fu_1361_p3[17:0];

assign tmp_5_fu_580_p2 = ((A1_reg_2497 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_60_cast_fu_1046_p1 = tmp_59_cast_reg_2612;

assign tmp_60_fu_1373_p3 = {{tmp_59_fu_1369_p1}, {42'd0}};

assign tmp_62_fu_1388_p3 = {{tmp_61_reg_2721}, {56'd0}};

assign tmp_63_cast_fu_1142_p1 = tmp_38_fu_1135_p3;

assign tmp_63_fu_1399_p2 = (Z4_0_2_cast_fu_1333_p1 - tmp_99_cast_fu_1385_p1);

assign tmp_64_cast_fu_1146_p1 = $signed(tmp_39_reg_2654);

assign tmp_64_fu_1409_p2 = ($signed(tmp_97_cast_fu_1381_p1) + $signed(tmp_102_cast_fu_1405_p1));

assign tmp_65_fu_1415_p2 = (tmp_64_fu_1409_p2 - tmp_101_cast_fu_1395_p1);

assign tmp_66_fu_1425_p1 = epsZ4_0_fu_1344_p3;

assign tmp_67_fu_1429_p1 = tmp_65_fu_1415_p2[60:0];

assign tmp_68_fu_1433_p1 = epsZ4_0_fu_1344_p3;

assign tmp_69_fu_1437_p1 = tmp_65_fu_1415_p2[59:0];

assign tmp_6_fu_585_p3 = {{5'd16}, {Z1_d_reg_2491}};

assign tmp_70_cast_fu_1064_p1 = tmp_47_fu_1058_p3;

assign tmp_70_fu_1483_p4 = {{Z5_0_fu_1441_p2[62:60]}};

assign tmp_71_cast_fu_1078_p1 = tmp_48_fu_1068_p4;

assign tmp_71_fu_1501_p2 = ((p_mask6_fu_1493_p3 == 63'd8070450532247928832) ? 1'b1 : 1'b0);

assign tmp_72_fu_1507_p2 = ($signed(9'd511) + $signed(Z5_1_cast_fu_1479_p1));

assign tmp_73_cast_fu_1193_p1 = tmp_72_cast_reg_2659;

assign tmp_73_fu_1513_p3 = Z5_0_cast_fu_1453_p2[32'd60];

assign tmp_74_cast_fu_1196_p1 = tmp_49_reg_2664;

assign tmp_74_fu_1525_p2 = (Z5_1_fu_1473_p2 + tmp_112_cast_fu_1521_p1);

assign tmp_75_fu_1560_p1 = Z5_1_2_fu_1554_p3[2:0];

assign tmp_76_fu_1993_p1 = A5_reg_2766;

assign tmp_77_fu_1618_p2 = ((A5_reg_2766 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_78_fu_1630_p2 = (25'd8388608 | Z5_1_2_cast2_fu_1609_p1);

assign tmp_7_cast_fu_630_p1 = B1_fu_623_p3;

assign tmp_7_fu_645_p2 = (tmp_7_cast_fu_630_p1 - tmp_10_cast_fu_641_p1);

assign tmp_80_fu_1647_p2 = (Z5_0_2_cast_fu_1612_p1 - tmp_128_cast_fu_1644_p1);

assign tmp_81_cast_cast_fu_1237_p1 = tmp_53_fu_1229_p3;

assign tmp_81_fu_1574_p1 = Z5_1_2_fu_1554_p3[6:0];

assign tmp_82_fu_1673_p1 = tmp1_fu_1661_p3;

assign tmp_83_fu_1657_p1 = epsZ5_1_fu_1636_p3[20:0];

assign tmp_84_fu_1723_p4 = {{Z6_0_fu_1681_p2[61:60]}};

assign tmp_85_fu_1741_p2 = ((p_mask9_fu_1733_p3 == 62'd3458764513820540928) ? 1'b1 : 1'b0);

assign tmp_86_fu_1747_p2 = ($signed(4'd15) + $signed(tmp_89_fu_1719_p1));

assign tmp_87_fu_1677_p1 = tmp_80_fu_1647_p2[59:0];

assign tmp_89_fu_1719_p1 = Z6_1_fu_1713_p2[3:0];

assign tmp_8_fu_655_p2 = ($signed(tmp_7_fu_645_p2) + $signed(epsZ1_1_fu_612_p3));

assign tmp_90_fu_1998_p1 = A6_reg_2782;

assign tmp_91_fu_1825_p2 = ((A6_reg_2782 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_92_fu_1860_p3 = {{20'd524288}, {A6_reg_2782}};

assign tmp_93_fu_1830_p4 = {{P6_fu_1819_p2[48:4]}};

assign tmp_94_fu_1844_p2 = (B6_cast_fu_1803_p1 - tmp_151_cast_fu_1840_p1);

assign tmp_95_fu_1753_p3 = Z6_0_cast_fu_1693_p2[32'd60];

assign tmp_96_fu_1893_p1 = tmp2_fu_1881_p3;

assign tmp_97_cast_fu_1381_p1 = tmp_60_fu_1373_p3;

assign tmp_97_fu_1761_p1 = tmp_95_fu_1753_p3;

assign tmp_98_fu_1897_p3 = {{tmp_115_fu_1877_p1}, {epsZ6_0_fu_1854_p3}};

assign tmp_99_cast_fu_1385_p1 = tmp_98_cast_reg_2716;

assign tmp_99_fu_2005_p1 = A7_reg_2823;

assign tmp_fu_524_p1 = A;

assign tmp_s_fu_604_p3 = {{epsZ1_fu_592_p3}, {1'd0}};

always @ (posedge ap_clk) begin
    tmp_reg_2475[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_2539[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_35_reg_2644[14:9] <= 6'b000000;
end

endmodule //range_red
